#nullable enable
#pragma warning disable CA1822
using Chabis.HtmlHelper.Hyperlinks;

// <auto-generated>
// This Code is auto generated by Dg.ActionLinkGenerator (https://dev.azure.com/digitecgalaxus/devinite/_git/Dg.ActionLinkGenerator)
// manual changes will be overriden!!!
// </auto-generated>

namespace devinite.Web
{
    public partial class ActionLink
    {
        private ActionLink(string workingplacelogin, string signout, ActionLinkOptions? actionLinkOptions,
            params ActionParameter[] actionParameters)
        {
            
        }

        public static partial class Templates
        {
            public static class Erp
            {
                #region Erp.AccessoryGroup
                public static readonly AccessoryGroupControllerActionContainer AccessoryGroupController = new AccessoryGroupControllerActionContainer();
                public class AccessoryGroupControllerActionContainer
                {
                    public ActionLink SearchAjaxExcept(System.String q, System.Collections.Generic.IReadOnlyList<int> accessoryGroupIds, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AccessoryGroup", "SearchAjaxExcept", options, new ActionParameter("q", q), new ActionParameter("accessoryGroupIds", accessoryGroupIds));
                    }
                }
                #endregion

                #region Erp.Account
                public static readonly AccountControllerActionContainer AccountController = new AccountControllerActionContainer();
                public class AccountControllerActionContainer
                {
                    public ActionLink AutocompleteSearch(System.String q, System.Int32 accountSystemId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Account", "AutocompleteSearch", options, new ActionParameter("q", q), new ActionParameter("accountSystemId", accountSystemId));
                    }
                }
                #endregion

                #region Erp.AccountingPurposeName
                public static readonly AccountingPurposeNameControllerActionContainer AccountingPurposeNameController = new AccountingPurposeNameControllerActionContainer();
                public class AccountingPurposeNameControllerActionContainer
                {
                    public ActionLink AutocompleteSearch(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AccountingPurposeName", "AutocompleteSearch", options, new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.AddPropertyDefinitionOptions
                public static readonly AddPropertyDefinitionOptionsControllerActionContainer AddPropertyDefinitionOptionsController = new AddPropertyDefinitionOptionsControllerActionContainer();
                public class AddPropertyDefinitionOptionsControllerActionContainer
                {
                    public ActionLink Show(System.Int32 propertyDefinitionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AddPropertyDefinitionOptions", "ShowAsync", options, new ActionParameter("propertyDefinitionId", propertyDefinitionId));
                    }
                }
                #endregion

                #region Erp.AdvertisementContent
                public static readonly AdvertisementContentControllerActionContainer AdvertisementContentController = new AdvertisementContentControllerActionContainer();
                public class AdvertisementContentControllerActionContainer
                {
                    public ActionLink GetAmountWithDeliverySurcharge(System.Decimal amount, int currencyId, System.Int32 productMandatorCountryId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AdvertisementContent", "GetAmountWithDeliverySurcharge", options, new ActionParameter("amount", amount), new ActionParameter("currencyId", currencyId), new ActionParameter("productMandatorCountryId", productMandatorCountryId));
                    }
                    public ActionLink GetAmountWithoutDeliverySurcharge(System.Decimal amount, int currencyId, System.Int32 productMandatorCountryId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AdvertisementContent", "GetAmountWithoutDeliverySurcharge", options, new ActionParameter("amount", amount), new ActionParameter("currencyId", currencyId), new ActionParameter("productMandatorCountryId", productMandatorCountryId));
                    }
                }
                #endregion

                #region Erp.AdvertisingFunding
                public static readonly AdvertisingFundingControllerActionContainer AdvertisingFundingController = new AdvertisingFundingControllerActionContainer();
                public class AdvertisingFundingControllerActionContainer
                {
                    public ActionLink SearchProductTypes(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AdvertisingFunding", "SearchProductTypes", options, new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.AllControllers
                public static readonly AllControllersControllerActionContainer AllControllersController = new AllControllersControllerActionContainer();
                public class AllControllersControllerActionContainer
                {
                    public ActionLink List(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AllControllers", "List", options);
                    }
                }
                #endregion

                #region Erp.ArticleService
                public static readonly ArticleServiceControllerActionContainer ArticleServiceController = new ArticleServiceControllerActionContainer();
                public class ArticleServiceControllerActionContainer
                {
                    public ActionLink List(int salesItemId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ArticleService", "List", options, new ActionParameter("salesItemId", salesItemId));
                    }
                }
                #endregion

                #region Erp.AssortmentControlling
                public static readonly AssortmentControllingControllerActionContainer AssortmentControllingController = new AssortmentControllingControllerActionContainer();
                public class AssortmentControllingControllerActionContainer
                {
                    public ActionLink BoxDetail(System.Int32 supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AssortmentControlling", "BoxDetailAsync", options, new ActionParameter("supplierId", supplierId));
                    }
                    public ActionLink ToggleStealthMode(System.Int32 supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AssortmentControlling", "ToggleStealthMode", options, new ActionParameter("supplierId", supplierId));
                    }
                }
                #endregion

                #region Erp.AutoBuyCorrection
                public static readonly AutoBuyCorrectionControllerActionContainer AutoBuyCorrectionController = new AutoBuyCorrectionControllerActionContainer();
                public class AutoBuyCorrectionControllerActionContainer
                {
                    public ActionLink ShowProposal(System.Int32 productId, System.Int32 responsibleEmployeeId, System.DateTime purchaseDate, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AutoBuyCorrection", "ShowProposalAsync", options, new ActionParameter("productId", productId), new ActionParameter("responsibleEmployeeId", responsibleEmployeeId), new ActionParameter("purchaseDate", purchaseDate));
                    }
                }
                #endregion

                #region Erp.AutoBuyEmployeeSearch
                public static readonly AutoBuyEmployeeSearchControllerActionContainer AutoBuyEmployeeSearchController = new AutoBuyEmployeeSearchControllerActionContainer();
                public class AutoBuyEmployeeSearchControllerActionContainer
                {
                    public ActionLink SearchCategoryPlanningManagers(System.String? searchTerm = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AutoBuyEmployeeSearch", "SearchCategoryPlanningManagers", options, new ActionParameter("searchTerm", searchTerm));
                    }
                }
                #endregion

                #region Erp.AutoBuySupplierSearch
                public static readonly AutoBuySupplierSearchControllerActionContainer AutoBuySupplierSearchController = new AutoBuySupplierSearchControllerActionContainer();
                public class AutoBuySupplierSearchControllerActionContainer
                {
                    public ActionLink SearchSuppliers(System.String? searchTerm = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("AutoBuySupplierSearch", "SearchSuppliers", options, new ActionParameter("searchTerm", searchTerm));
                    }
                }
                #endregion

                #region Erp.BankAccount
                public static readonly BankAccountControllerActionContainer BankAccountController = new BankAccountControllerActionContainer();
                public class BankAccountControllerActionContainer
                {
                    public ActionLink CamtControlling(object bankAccount, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BankAccount", "CamtControllingAsync", options, new ActionParameter("id", bankAccount));
                    }
                    public ActionLink Show(object bankAccount, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BankAccount", "Show", options, new ActionParameter("id", bankAccount));
                    }
                }
                #endregion

                #region Erp.BankPayment
                public static readonly BankPaymentControllerActionContainer BankPaymentController = new BankPaymentControllerActionContainer();
                public class BankPaymentControllerActionContainer
                {
                    public ActionLink DetachInvoice(object bankPayment, System.Int32 invoiceId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BankPayment", "DetachInvoice", options, new ActionParameter("id", bankPayment), new ActionParameter("invoiceId", invoiceId));
                    }
                    public ActionLink Show(object bankPayment, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BankPayment", "Show", options, new ActionParameter("id", bankPayment));
                    }
                }
                #endregion

                #region Erp.BankPaymentProposal
                public static readonly BankPaymentProposalControllerActionContainer BankPaymentProposalController = new BankPaymentProposalControllerActionContainer();
                public class BankPaymentProposalControllerActionContainer
                {
                    public ActionLink CreateBankPaymentProposal(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BankPaymentProposal", "CreateBankPaymentProposal", options);
                    }
                    public ActionLink Show(int bankPaymentProposalId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BankPaymentProposal", "Show", options, new ActionParameter("id", bankPaymentProposalId));
                    }
                }
                #endregion

                #region Erp.Barcode
                public static readonly BarcodeControllerActionContainer BarcodeController = new BarcodeControllerActionContainer();
                public class BarcodeControllerActionContainer
                {
                    public ActionLink CustomBarcode(System.String data, System.Int32 rotation, System.Boolean isTextVisible, System.Int32 barcodeSize, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Barcode", "CustomBarcode", options, new ActionParameter("data", data), new ActionParameter("rotation", rotation), new ActionParameter("isTextVisible", isTextVisible), new ActionParameter("barcodeSize", barcodeSize));
                    }
                    public ActionLink CustomCode128Barcode(System.String data, System.Int32 rotation, System.Boolean isTextVisible, System.Int32 barcodeSize, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Barcode", "CustomCode128Barcode", options, new ActionParameter("data", data), new ActionParameter("rotation", rotation), new ActionParameter("isTextVisible", isTextVisible), new ActionParameter("barcodeSize", barcodeSize));
                    }
                }
                #endregion

                #region Erp.BarcodeInput
                public static readonly BarcodeInputControllerActionContainer BarcodeInputController = new BarcodeInputControllerActionContainer();
                public class BarcodeInputControllerActionContainer
                {
                    public ActionLink HandleBarcodeInput(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BarcodeInput", "HandleBarcodeInput", options);
                    }
                    public ActionLink Widget(System.String customBarcodeActionHandler, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BarcodeInput", "Widget", options, new ActionParameter("customBarcodeActionHandler", customBarcodeActionHandler));
                    }
                }
                #endregion

                #region Erp.BetterRegisterProductInformation
                public static readonly BetterRegisterProductInformationControllerActionContainer BetterRegisterProductInformationController = new BetterRegisterProductInformationControllerActionContainer();
                public class BetterRegisterProductInformationControllerActionContainer
                {
                    public ActionLink Default(System.Int32 productId, System.Int32 supplierCompanyId, System.String? barcode, System.Boolean isRma, System.Boolean isRecirculating, System.Int32 warehouseId, System.String? redirectUrl, System.Int32? refurbishedId = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BetterRegisterProductInformation", "DefaultAsync", options, new ActionParameter("productId", productId), new ActionParameter("supplierCompanyId", supplierCompanyId), new ActionParameter("barcode", barcode), new ActionParameter("isRma", isRma), new ActionParameter("isRecirculating", isRecirculating), new ActionParameter("warehouseId", warehouseId), new ActionParameter("redirectUrl", redirectUrl), new ActionParameter("refurbishedId", refurbishedId));
                    }
                }
                #endregion

                #region Erp.BlockedBankPayments
                public static readonly BlockedBankPaymentsControllerActionContainer BlockedBankPaymentsController = new BlockedBankPaymentsControllerActionContainer();
                public class BlockedBankPaymentsControllerActionContainer
                {
                    public ActionLink List(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BlockedBankPayments", "List", options);
                    }
                }
                #endregion

                #region Erp.BookInErrorCaseRouting
                public static readonly BookInErrorCaseRoutingControllerActionContainer BookInErrorCaseRoutingController = new BookInErrorCaseRoutingControllerActionContainer();
                public class BookInErrorCaseRoutingControllerActionContainer
                {
                    public ActionLink Route(System.Int64 errorCaseId, System.String redirectUrl, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BookInErrorCaseRouting", "RouteAsync", options, new ActionParameter("errorCaseId", errorCaseId), new ActionParameter("redirectUrl", redirectUrl));
                    }
                }
                #endregion

                #region Erp.Booking
                public static readonly BookingControllerActionContainer BookingController = new BookingControllerActionContainer();
                public class BookingControllerActionContainer
                {
                    public ActionLink Show(object booking, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Booking", "Show", options, new ActionParameter("id", booking));
                    }
                }
                #endregion

                #region Erp.BookToLogisticsContainer
                public static readonly BookToLogisticsContainerControllerActionContainer BookToLogisticsContainerController = new BookToLogisticsContainerControllerActionContainer();
                public class BookToLogisticsContainerControllerActionContainer
                {
                    public ActionLink BookToLogisticsContainer(System.Collections.Generic.IReadOnlyList<int> itemProductStaticIds, int logisticsContainerPurposeId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BookToLogisticsContainer", "BookToLogisticsContainer", options, new ActionParameter("itemProductStaticIds", itemProductStaticIds), new ActionParameter("logisticsContainerPurposeId", logisticsContainerPurposeId));
                    }
                }
                #endregion

                #region Erp.BotPrice
                public static readonly BotPriceControllerActionContainer BotPriceController = new BotPriceControllerActionContainer();
                public class BotPriceControllerActionContainer
                {
                    public ActionLink SalesPriceBot(System.Int64 productId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BotPrice", "SalesPriceBotAsync", options, new ActionParameter("productId", productId), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.Brand
                public static readonly BrandControllerActionContainer BrandController = new BrandControllerActionContainer();
                public class BrandControllerActionContainer
                {
                    public ActionLink Search(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Brand", "Search", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchAjax(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Brand", "SearchAjax", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object brand, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Brand", "Show", options, new ActionParameter("id", brand));
                    }
                    public ActionLink ShowForId(System.Int32 brandId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Brand", "ShowForId", options, new ActionParameter("brandId", brandId));
                    }
                }
                #endregion

                #region Erp.BrowserSession
                public static readonly BrowserSessionControllerActionContainer BrowserSessionController = new BrowserSessionControllerActionContainer();
                public class BrowserSessionControllerActionContainer
                {
                    public ActionLink Show(System.String id, System.Byte? numberOfDays, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("BrowserSession", "Show", options, new ActionParameter("id", id), new ActionParameter("numberOfDays", numberOfDays));
                    }
                }
                #endregion

                #region Erp.CamtTransaction
                public static readonly CamtTransactionControllerActionContainer CamtTransactionController = new CamtTransactionControllerActionContainer();
                public class CamtTransactionControllerActionContainer
                {
                    public ActionLink CamtTransactionTypeEdit(System.Int32 camtTransactionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CamtTransaction", "CamtTransactionTypeEditAsync", options, new ActionParameter("camtTransactionId", camtTransactionId));
                    }
                    public ActionLink Show(System.Int32 camtTransactionId, System.Boolean showUpdatedMatchingCandidates, System.Boolean editCamtTransactionType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CamtTransaction", "ShowAsync", options, new ActionParameter("camtTransactionId", camtTransactionId), new ActionParameter("showUpdatedMatchingCandidates", showUpdatedMatchingCandidates), new ActionParameter("editCamtTransactionType", editCamtTransactionType));
                    }
                }
                #endregion

                #region Erp.CamtTransactionMatching
                public static readonly CamtTransactionMatchingControllerActionContainer CamtTransactionMatchingController = new CamtTransactionMatchingControllerActionContainer();
                public class CamtTransactionMatchingControllerActionContainer
                {
                    public ActionLink Show(System.Int32 transactionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CamtTransactionMatching", "ShowAsync", options, new ActionParameter("transactionId", transactionId));
                    }
                }
                #endregion

                #region Erp.CancelRequest
                public static readonly CancelRequestControllerActionContainer CancelRequestController = new CancelRequestControllerActionContainer();
                public class CancelRequestControllerActionContainer
                {
                    public ActionLink Show(object cancelRequest, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CancelRequest", "Show", options, new ActionParameter("id", cancelRequest));
                    }
                }
                #endregion

                #region Erp.CashBox
                public static readonly CashBoxControllerActionContainer CashBoxController = new CashBoxControllerActionContainer();
                public class CashBoxControllerActionContainer
                {
                    public ActionLink Show(object cashBox, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CashBox", "Show", options, new ActionParameter("id", cashBox));
                    }
                }
                #endregion

                #region Erp.CashBoxDifference
                public static readonly CashBoxDifferenceControllerActionContainer CashBoxDifferenceController = new CashBoxDifferenceControllerActionContainer();
                public class CashBoxDifferenceControllerActionContainer
                {
                    public ActionLink ListForType(object cashBox, object cashBoxDifferenceType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CashBoxDifference", "ListForType", options, new ActionParameter("id", cashBox), new ActionParameter("cashBoxDifferenceType", cashBoxDifferenceType));
                    }
                }
                #endregion

                #region Erp.CashBoxTransaction
                public static readonly CashBoxTransactionControllerActionContainer CashBoxTransactionController = new CashBoxTransactionControllerActionContainer();
                public class CashBoxTransactionControllerActionContainer
                {
                    public ActionLink Show(object cashBoxTransaction, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CashBoxTransaction", "Show", options, new ActionParameter("id", cashBoxTransaction));
                    }
                }
                #endregion

                #region Erp.CommercialArrangement
                public static readonly CommercialArrangementControllerActionContainer CommercialArrangementController = new CommercialArrangementControllerActionContainer();
                public class CommercialArrangementControllerActionContainer
                {
                    public ActionLink ArrangementNew(System.Int32 customerId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommercialArrangement", "ArrangementNew", options, new ActionParameter("customerId", customerId), new ActionParameter("country", country));
                    }
                    public ActionLink CommercialArrangementFile(System.Int32 commercialArrangementId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommercialArrangement", "CommercialArrangementFileAsync", options, new ActionParameter("commercialArrangementId", commercialArrangementId));
                    }
                    public ActionLink DeleteCommercialArrangement(System.Int32 commercialArrangementId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommercialArrangement", "DeleteCommercialArrangementAsync", options, new ActionParameter("commercialArrangementId", commercialArrangementId), new ActionParameter("country", country));
                    }
                    public ActionLink Edit(System.Int32 commercialArrangementId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommercialArrangement", "EditAsync", options, new ActionParameter("commercialArrangementId", commercialArrangementId), new ActionParameter("country", country));
                    }
                    public ActionLink Show(System.Int32 commercialArrangementId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommercialArrangement", "ShowAsync", options, new ActionParameter("commercialArrangementId", commercialArrangementId), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.CommercialArrangementManualAllocation
                public static readonly CommercialArrangementManualAllocationControllerActionContainer CommercialArrangementManualAllocationController = new CommercialArrangementManualAllocationControllerActionContainer();
                public class CommercialArrangementManualAllocationControllerActionContainer
                {
                    public ActionLink NewManualAllocation(System.Int32 commercialArrangementId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommercialArrangementManualAllocation", "NewManualAllocationAsync", options, new ActionParameter("commercialArrangementId", commercialArrangementId), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.CommunityQuestion
                public static readonly CommunityQuestionControllerActionContainer CommunityQuestionController = new CommunityQuestionControllerActionContainer();
                public class CommunityQuestionControllerActionContainer
                {
                    public ActionLink SetResponsibility(object communityQuestion, int communityQuestionResponsibilityId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommunityQuestion", "SetResponsibility", options, new ActionParameter("id", communityQuestion), new ActionParameter("communityQuestionResponsibilityId", communityQuestionResponsibilityId));
                    }
                    public ActionLink Show(object communityQuestion, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CommunityQuestion", "Show", options, new ActionParameter("id", communityQuestion));
                    }
                }
                #endregion

                #region Erp.CompanyContract
                public static readonly CompanyContractControllerActionContainer CompanyContractController = new CompanyContractControllerActionContainer();
                public class CompanyContractControllerActionContainer
                {
                    public ActionLink SearchAjax(System.String q, int companyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompanyContract", "SearchAjax", options, new ActionParameter("q", q), new ActionParameter("companyId", companyId));
                    }
                    public ActionLink Show(object companyContract, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompanyContract", "Show", options, new ActionParameter("id", companyContract));
                    }
                }
                #endregion

                #region Erp.CompanyContractFile
                public static readonly CompanyContractFileControllerActionContainer CompanyContractFileController = new CompanyContractFileControllerActionContainer();
                public class CompanyContractFileControllerActionContainer
                {
                    public ActionLink CompanyContractFile(object companyContractFile, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompanyContractFile", "CompanyContractFileAsync", options, new ActionParameter("id", companyContractFile));
                    }
                }
                #endregion

                #region Erp.CompanyInvoiceRequest
                public static readonly CompanyInvoiceRequestControllerActionContainer CompanyInvoiceRequestController = new CompanyInvoiceRequestControllerActionContainer();
                public class CompanyInvoiceRequestControllerActionContainer
                {
                    public ActionLink Show(object companyInvoiceRequest, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompanyInvoiceRequest", "Show", options, new ActionParameter("id", companyInvoiceRequest));
                    }
                }
                #endregion

                #region Erp.CompetitorCountry
                public static readonly CompetitorCountryControllerActionContainer CompetitorCountryController = new CompetitorCountryControllerActionContainer();
                public class CompetitorCountryControllerActionContainer
                {
                    public ActionLink Show(System.Int32 competitorCountryId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorCountry", "Show", options, new ActionParameter("competitorCountryId", competitorCountryId));
                    }
                }
                #endregion

                #region Erp.CompetitorGroup
                public static readonly CompetitorGroupControllerActionContainer CompetitorGroupController = new CompetitorGroupControllerActionContainer();
                public class CompetitorGroupControllerActionContainer
                {
                    public ActionLink Show(System.Int32 competitorGroupId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorGroup", "ShowAsync", options, new ActionParameter("competitorGroupId", competitorGroupId), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.CompetitorGroupOld
                public static readonly CompetitorGroupOldControllerActionContainer CompetitorGroupOldController = new CompetitorGroupOldControllerActionContainer();
                public class CompetitorGroupOldControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorGroupOld", "Default", options);
                    }
                    public ActionLink Show(System.Int32 competitorGroupId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorGroupOld", "Show", options, new ActionParameter("competitorGroupId", competitorGroupId));
                    }
                }
                #endregion

                #region Erp.CompetitorOffer
                public static readonly CompetitorOfferControllerActionContainer CompetitorOfferController = new CompetitorOfferControllerActionContainer();
                public class CompetitorOfferControllerActionContainer
                {
                    public ActionLink Show(System.Int64 productId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorOffer", "ShowAsync", options, new ActionParameter("productId", productId), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.CompetitorOfferOld
                public static readonly CompetitorOfferOldControllerActionContainer CompetitorOfferOldController = new CompetitorOfferOldControllerActionContainer();
                public class CompetitorOfferOldControllerActionContainer
                {
                    public ActionLink ForCompetitorOfferDetail(System.Int32 productId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorOfferOld", "ForCompetitorOfferDetail", options, new ActionParameter("productId", productId), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.CompetitorOld
                public static readonly CompetitorOldControllerActionContainer CompetitorOldController = new CompetitorOldControllerActionContainer();
                public class CompetitorOldControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorOld", "Default", options);
                    }
                    public ActionLink Show(System.Int32 competitorId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CompetitorOld", "Show", options, new ActionParameter("competitorId", competitorId));
                    }
                }
                #endregion

                #region Erp.Country
                public static readonly CountryControllerActionContainer CountryController = new CountryControllerActionContainer();
                public class CountryControllerActionContainer
                {
                    public ActionLink SearchWithSelect2(System.String q, int languageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Country", "SearchWithSelect2", options, new ActionParameter("q", q), new ActionParameter("languageId", languageId));
                    }
                }
                #endregion

                #region Erp.CreditInsuranceCase
                public static readonly CreditInsuranceCaseControllerActionContainer CreditInsuranceCaseController = new CreditInsuranceCaseControllerActionContainer();
                public class CreditInsuranceCaseControllerActionContainer
                {
                    public ActionLink Show(object creditInsuranceCase, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CreditInsuranceCase", "Show", options, new ActionParameter("id", creditInsuranceCase));
                    }
                }
                #endregion

                #region Erp.CreditInsurance
                public static readonly CreditInsuranceControllerActionContainer CreditInsuranceController = new CreditInsuranceControllerActionContainer();
                public class CreditInsuranceControllerActionContainer
                {
                    public ActionLink Show(object creditInsurance, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CreditInsurance", "Show", options, new ActionParameter("id", creditInsurance));
                    }
                }
                #endregion

                #region Erp.CreditInsuranceRequest
                public static readonly CreditInsuranceRequestControllerActionContainer CreditInsuranceRequestController = new CreditInsuranceRequestControllerActionContainer();
                public class CreditInsuranceRequestControllerActionContainer
                {
                    public ActionLink Show(object creditInsuranceRequest, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CreditInsuranceRequest", "Show", options, new ActionParameter("id", creditInsuranceRequest));
                    }
                }
                #endregion

                #region Erp.CreditLimitConfiguration
                public static readonly CreditLimitConfigurationControllerActionContainer CreditLimitConfigurationController = new CreditLimitConfigurationControllerActionContainer();
                public class CreditLimitConfigurationControllerActionContainer
                {
                    public ActionLink List(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CreditLimitConfiguration", "List", options);
                    }
                }
                #endregion

                #region Erp.CreditNote
                public static readonly CreditNoteControllerActionContainer CreditNoteController = new CreditNoteControllerActionContainer();
                public class CreditNoteControllerActionContainer
                {
                    public ActionLink Show(object invoice, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CreditNote", "Show", options, new ActionParameter("id", invoice));
                    }
                }
                #endregion

                #region Erp.CreditNoteRequest
                public static readonly CreditNoteRequestControllerActionContainer CreditNoteRequestController = new CreditNoteRequestControllerActionContainer();
                public class CreditNoteRequestControllerActionContainer
                {
                    public ActionLink Show(object invoice, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CreditNoteRequest", "Show", options, new ActionParameter("id", invoice));
                    }
                }
                #endregion

                #region Erp.CustomerBankAccount
                public static readonly CustomerBankAccountControllerActionContainer CustomerBankAccountController = new CustomerBankAccountControllerActionContainer();
                public class CustomerBankAccountControllerActionContainer
                {
                    public ActionLink Show(object customerBankAccount, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerBankAccount", "Show", options, new ActionParameter("id", customerBankAccount));
                    }
                }
                #endregion

                #region Erp.Customer
                public static readonly CustomerControllerActionContainer CustomerController = new CustomerControllerActionContainer();
                public class CustomerControllerActionContainer
                {
                    public ActionLink Configuration(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "Configuration", options, new ActionParameter("id", customer));
                    }
                    public ActionLink MandatorConfiguration(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "MandatorConfiguration", options, new ActionParameter("id", customer));
                    }
                    public ActionLink OrderSearch(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "OrderSearch", options, new ActionParameter("id", customer));
                    }
                    public ActionLink PaymentSettings(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "PaymentSettings", options, new ActionParameter("id", customer));
                    }
                    public ActionLink SearchInvoices(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "SearchInvoices", options, new ActionParameter("id", customer));
                    }
                    public ActionLink Show(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "Show", options, new ActionParameter("id", customer));
                    }
                    public ActionLink Supplier(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "Supplier", options, new ActionParameter("id", customer));
                    }
                    public ActionLink Terms(object customer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Customer", "Terms", options, new ActionParameter("id", customer));
                    }
                }
                #endregion

                #region Erp.CustomerEDIData
                public static readonly CustomerEDIDataControllerActionContainer CustomerEDIDataController = new CustomerEDIDataControllerActionContainer();
                public class CustomerEDIDataControllerActionContainer
                {
                    public ActionLink Show(object customerEdiData, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerEDIData", "Show", options, new ActionParameter("id", customerEdiData));
                    }
                }
                #endregion

                #region Erp.CustomerEDIInterface
                public static readonly CustomerEDIInterfaceControllerActionContainer CustomerEDIInterfaceController = new CustomerEDIInterfaceControllerActionContainer();
                public class CustomerEDIInterfaceControllerActionContainer
                {
                    public ActionLink New(object customer, System.Int32 ediInterfaceId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerEDIInterface", "New", options, new ActionParameter("id", customer), new ActionParameter("ediInterfaceId", ediInterfaceId));
                    }
                }
                #endregion

                #region Erp.CustomerFile
                public static readonly CustomerFileControllerActionContainer CustomerFileController = new CustomerFileControllerActionContainer();
                public class CustomerFileControllerActionContainer
                {
                    public ActionLink CustomerFile(object customerFile, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerFile", "CustomerFileAsync", options, new ActionParameter("id", customerFile));
                    }
                }
                #endregion

                #region Erp.CustomerGuidanceSystemSalesAssistantTool
                public static readonly CustomerGuidanceSystemSalesAssistantToolControllerActionContainer CustomerGuidanceSystemSalesAssistantToolController = new CustomerGuidanceSystemSalesAssistantToolControllerActionContainer();
                public class CustomerGuidanceSystemSalesAssistantToolControllerActionContainer
                {
                    public ActionLink AdoptTicket(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "AdoptTicketAsync", options);
                    }
                    public ActionLink AssignTicketWithNoMatchingSkill(object customerGuidanceSystemTicketType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "AssignTicketWithNoMatchingSkillAsync", options, new ActionParameter("id", customerGuidanceSystemTicketType));
                    }
                    public ActionLink CreateManualTicket(object ticketType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "CreateManualTicketAsync", options, new ActionParameter("id", ticketType));
                    }
                    public ActionLink CustomerGuidanceSystemSalesAssistantToolWidget(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "CustomerGuidanceSystemSalesAssistantToolWidget", options);
                    }
                    public ActionLink NextTicket(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "NextTicketAsync", options);
                    }
                    public ActionLink Reload(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "Reload", options);
                    }
                    public ActionLink SignOff(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "SignOffAsync", options);
                    }
                    public ActionLink SignOn(object cashDesk, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerGuidanceSystemSalesAssistantTool", "SignOnAsync", options, new ActionParameter("id", cashDesk));
                    }
                }
                #endregion

                #region Erp.CustomerReturnRegistration
                public static readonly CustomerReturnRegistrationControllerActionContainer CustomerReturnRegistrationController = new CustomerReturnRegistrationControllerActionContainer();
                public class CustomerReturnRegistrationControllerActionContainer
                {
                    public ActionLink Show(int customerReturnRegistrationId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerReturnRegistration", "Show", options, new ActionParameter("id", customerReturnRegistrationId));
                    }
                }
                #endregion

                #region Erp.CustomerReturnRegistrationItemProduct
                public static readonly CustomerReturnRegistrationItemProductControllerActionContainer CustomerReturnRegistrationItemProductController = new CustomerReturnRegistrationItemProductControllerActionContainer();
                public class CustomerReturnRegistrationItemProductControllerActionContainer
                {
                    public ActionLink Show(object customerReturnRegistrationItemProduct, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("CustomerReturnRegistrationItemProduct", "ShowAsync", options, new ActionParameter("id", customerReturnRegistrationItemProduct));
                    }
                }
                #endregion

                #region Erp.DataSourceProductColumn
                public static readonly DataSourceProductColumnControllerActionContainer DataSourceProductColumnController = new DataSourceProductColumnControllerActionContainer();
                public class DataSourceProductColumnControllerActionContainer
                {
                    public ActionLink Show(object dataSourceProductColumn, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DataSourceProductColumn", "ShowAsync", options, new ActionParameter("id", dataSourceProductColumn));
                    }
                }
                #endregion

                #region Erp.DataSourceProductColumnType
                public static readonly DataSourceProductColumnTypeControllerActionContainer DataSourceProductColumnTypeController = new DataSourceProductColumnTypeControllerActionContainer();
                public class DataSourceProductColumnTypeControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DataSourceProductColumnType", "Default", options);
                    }
                }
                #endregion

                #region Erp.DataSourceProduct
                public static readonly DataSourceProductControllerActionContainer DataSourceProductController = new DataSourceProductControllerActionContainer();
                public class DataSourceProductControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DataSourceProduct", "Default", options);
                    }
                    public ActionLink Show(object dataSourceProduct, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DataSourceProduct", "Show", options, new ActionParameter("id", dataSourceProduct));
                    }
                    public ActionLink SupplierCustomConfigurationNew(object supplier, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DataSourceProduct", "SupplierCustomConfigurationNew", options, new ActionParameter("id", supplier));
                    }
                    public ActionLink SupplierMiniConfigurationNew(object supplier, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DataSourceProduct", "SupplierMiniConfigurationNew", options, new ActionParameter("id", supplier));
                    }
                }
                #endregion

                #region Erp.DbContent
                public static readonly DbContentControllerActionContainer DbContentController = new DbContentControllerActionContainer();
                public class DbContentControllerActionContainer
                {
                    public ActionLink Delete(object dbContent, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DbContent", "Delete", options, new ActionParameter("id", dbContent));
                    }
                    public ActionLink Edit(object dbContent, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DbContent", "Edit", options, new ActionParameter("id", dbContent));
                    }
                    public ActionLink SimpleSearch(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DbContent", "SimpleSearch", options, new ActionParameter("q", q));
                    }
                    public ActionLink TranslationServiceSuggestions(int dbContentId, int languageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DbContent", "TranslationServiceSuggestions", options, new ActionParameter("id", dbContentId), new ActionParameter("languageId", languageId));
                    }
                }
                #endregion

                #region Erp.DebtCollectionCase
                public static readonly DebtCollectionCaseControllerActionContainer DebtCollectionCaseController = new DebtCollectionCaseControllerActionContainer();
                public class DebtCollectionCaseControllerActionContainer
                {
                    public ActionLink Show(object debtCollectionCase, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DebtCollectionCase", "Show", options, new ActionParameter("id", debtCollectionCase));
                    }
                }
                #endregion

                #region Erp.Delivery
                public static readonly DeliveryControllerActionContainer DeliveryController = new DeliveryControllerActionContainer();
                public class DeliveryControllerActionContainer
                {
                    public ActionLink GetDeliveryNoteWithPackingUnit(System.Int32 packingUnitId, ActionLinkOptions? options = null)
                    {
                        if (options == null) { options = new ActionLinkOptions(); }
                        options.EncryptParameters = true; return new ActionLink("Delivery", "GetDeliveryNoteWithPackingUnit", options, new ActionParameter("packingUnitId", packingUnitId));
                    }
                    public ActionLink Show(object delivery, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Delivery", "Show", options, new ActionParameter("id", delivery));
                    }
                }
                #endregion

                #region Erp.DeliveryDateRequest
                public static readonly DeliveryDateRequestControllerActionContainer DeliveryDateRequestController = new DeliveryDateRequestControllerActionContainer();
                public class DeliveryDateRequestControllerActionContainer
                {
                    public ActionLink Show(object deliveryDateRequest, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryDateRequest", "Show", options, new ActionParameter("id", deliveryDateRequest));
                    }
                }
                #endregion

                #region Erp.DeliveryNote
                public static readonly DeliveryNoteControllerActionContainer DeliveryNoteController = new DeliveryNoteControllerActionContainer();
                public class DeliveryNoteControllerActionContainer
                {
                    public ActionLink BoxDetail(object deliveryNote, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNote", "BoxDetail", options, new ActionParameter("id", deliveryNote));
                    }
                    public ActionLink Detail(object deliveryNote, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNote", "Detail", options, new ActionParameter("id", deliveryNote));
                    }
                    public ActionLink SearchOpenWarehouseDeliveryNotes(System.String q, int supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNote", "SearchOpenWarehouseDeliveryNotes", options, new ActionParameter("q", q), new ActionParameter("supplierId", supplierId));
                    }
                    public ActionLink Show(object deliveryNote, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNote", "Show", options, new ActionParameter("id", deliveryNote));
                    }
                    public ActionLink ShowDeliveryNotePositions(object deliveryNote, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNote", "ShowDeliveryNotePositions", options, new ActionParameter("id", deliveryNote));
                    }
                }
                #endregion

                #region Erp.DeliveryNoteGroup
                public static readonly DeliveryNoteGroupControllerActionContainer DeliveryNoteGroupController = new DeliveryNoteGroupControllerActionContainer();
                public class DeliveryNoteGroupControllerActionContainer
                {
                    public ActionLink Show(int deliveryNoteGroupId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNoteGroup", "Show", options, new ActionParameter("id", deliveryNoteGroupId));
                    }
                }
                #endregion

                #region Erp.DeliveryNotePosition
                public static readonly DeliveryNotePositionControllerActionContainer DeliveryNotePositionController = new DeliveryNotePositionControllerActionContainer();
                public class DeliveryNotePositionControllerActionContainer
                {
                    public ActionLink BackToSupplier(object deliveryNotePosition, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNotePosition", "BackToSupplier", options, new ActionParameter("id", deliveryNotePosition));
                    }
                    public ActionLink HandleWrongDelivery(object deliveryNotePosition, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNotePosition", "HandleWrongDelivery", options, new ActionParameter("id", deliveryNotePosition));
                    }
                    public ActionLink Show(object deliveryNotePosition, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNotePosition", "Show", options, new ActionParameter("id", deliveryNotePosition));
                    }
                    public ActionLink TableDetail(object deliveryNotePosition, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNotePosition", "TableDetail", options, new ActionParameter("id", deliveryNotePosition));
                    }
                }
                #endregion

                #region Erp.DeliveryNoteRating
                public static readonly DeliveryNoteRatingControllerActionContainer DeliveryNoteRatingController = new DeliveryNoteRatingControllerActionContainer();
                public class DeliveryNoteRatingControllerActionContainer
                {
                    public ActionLink DeliveryNoteRatingImage(object deliveryNoteRatingImage, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DeliveryNoteRating", "DeliveryNoteRatingImageAsync", options, new ActionParameter("id", deliveryNoteRatingImage));
                    }
                }
                #endregion

                #region Erp.Department
                public static readonly DepartmentControllerActionContainer DepartmentController = new DepartmentControllerActionContainer();
                public class DepartmentControllerActionContainer
                {
                    public ActionLink SearchAjax(System.String q, System.Int32 companyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Department", "SearchAjax", options, new ActionParameter("q", q), new ActionParameter("companyId", companyId));
                    }
                }
                #endregion

                #region Erp.DisposalTour
                public static readonly DisposalTourControllerActionContainer DisposalTourController = new DisposalTourControllerActionContainer();
                public class DisposalTourControllerActionContainer
                {
                    public ActionLink Show(object disposalTour, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DisposalTour", "Show", options, new ActionParameter("id", disposalTour));
                    }
                }
                #endregion

                #region Erp.Dunning
                public static readonly DunningControllerActionContainer DunningController = new DunningControllerActionContainer();
                public class DunningControllerActionContainer
                {
                    public ActionLink ListLetterpostDunnings(int dunningSettingTypeId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Dunning", "ListLetterpostDunnings", options, new ActionParameter("id", dunningSettingTypeId));
                    }
                    public ActionLink PrintList(System.Collections.Generic.List<object> dunnings, System.Boolean printPostage, System.Boolean setProcessed, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Dunning", "PrintListAsync", options, new ActionParameter("dunnings", dunnings), new ActionParameter("printPostage", printPostage), new ActionParameter("setProcessed", setProcessed));
                    }
                    public ActionLink PrintSingle(object dunning, System.Boolean printPostage, System.Boolean setProcessed, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Dunning", "PrintSingleAsync", options, new ActionParameter("id", dunning), new ActionParameter("printPostage", printPostage), new ActionParameter("setProcessed", setProcessed));
                    }
                    public ActionLink Show(object dunning, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Dunning", "Show", options, new ActionParameter("id", dunning));
                    }
                    public ActionLink WebToPrint(object dunning, System.Boolean setAsProcessed, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Dunning", "WebToPrint", options, new ActionParameter("id", dunning), new ActionParameter("setAsProcessed", setAsProcessed));
                    }
                }
                #endregion

                #region Erp.DynamicPrice
                public static readonly DynamicPriceControllerActionContainer DynamicPriceController = new DynamicPriceControllerActionContainer();
                public class DynamicPriceControllerActionContainer
                {
                    public ActionLink ShowDynamicPrices(System.Int32 retailOfferId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("DynamicPrice", "ShowDynamicPrices", options, new ActionParameter("retailOfferId", retailOfferId));
                    }
                }
                #endregion

                #region Erp.EDIText
                public static readonly EDITextControllerActionContainer EDITextController = new EDITextControllerActionContainer();
                public class EDITextControllerActionContainer
                {
                    public ActionLink Show(object ediText, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EDIText", "ShowAsync", options, new ActionParameter("id", ediText));
                    }
                }
                #endregion

                #region Erp.Employee
                public static readonly EmployeeControllerActionContainer EmployeeController = new EmployeeControllerActionContainer();
                public class EmployeeControllerActionContainer
                {
                    public ActionLink SearchAjax(System.String q, System.Boolean searchInAllMandators, int? departmentId, System.Boolean onlyActiveEmployees, System.Int32? customerId = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Employee", "SearchAjax", options, new ActionParameter("q", q), new ActionParameter("searchInAllMandators", searchInAllMandators), new ActionParameter("departmentId", departmentId), new ActionParameter("onlyActiveEmployees", onlyActiveEmployees), new ActionParameter("customerId", customerId));
                    }
                    public ActionLink SearchWithSelect2(System.String q, int mandatorCustomerId, System.Int32 maxResultCount, System.Int32 consideredExitDays, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Employee", "SearchWithSelect2", options, new ActionParameter("q", q), new ActionParameter("mandatorCustomerId", mandatorCustomerId), new ActionParameter("maxResultCount", maxResultCount), new ActionParameter("consideredExitDays", consideredExitDays));
                    }
                }
                #endregion

                #region Erp.EmployeeTraining
                public static readonly EmployeeTrainingControllerActionContainer EmployeeTrainingController = new EmployeeTrainingControllerActionContainer();
                public class EmployeeTrainingControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTraining", "Default", options);
                    }
                    public ActionLink MonitoringFilterDepartment(object employeeTraining, object department, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTraining", "MonitoringFilterDepartment", options, new ActionParameter("id", employeeTraining), new ActionParameter("department", department));
                    }
                    public ActionLink Show(object employeeTraining, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTraining", "Show", options, new ActionParameter("id", employeeTraining));
                    }
                    public ActionLink ShowOtherUser(object employeeTraining, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTraining", "ShowOtherUser", options, new ActionParameter("id", employeeTraining));
                    }
                }
                #endregion

                #region Erp.EmployeeTrainingExam
                public static readonly EmployeeTrainingExamControllerActionContainer EmployeeTrainingExamController = new EmployeeTrainingExamControllerActionContainer();
                public class EmployeeTrainingExamControllerActionContainer
                {
                    public ActionLink ForDepartmentAndPassShow(object employeeTrainingExam, object department, System.Int32 pass, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTrainingExam", "ForDepartmentAndPassShow", options, new ActionParameter("id", employeeTrainingExam), new ActionParameter("department", department), new ActionParameter("pass", pass));
                    }
                    public ActionLink ForDepartmentShow(object employeeTrainingExam, object department, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTrainingExam", "ForDepartmentShow", options, new ActionParameter("id", employeeTrainingExam), new ActionParameter("department", department));
                    }
                    public ActionLink ForUserAndPassShow(object employeeTrainingExam, object user, System.Int32 pass, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTrainingExam", "ForUserAndPassShow", options, new ActionParameter("id", employeeTrainingExam), new ActionParameter("user", user), new ActionParameter("pass", pass));
                    }
                    public ActionLink Show(object employeeTrainingExam, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EmployeeTrainingExam", "Show", options, new ActionParameter("id", employeeTrainingExam));
                    }
                }
                #endregion

                #region Erp.EnumerationValuePropertyMapping
                public static readonly EnumerationValuePropertyMappingControllerActionContainer EnumerationValuePropertyMappingController = new EnumerationValuePropertyMappingControllerActionContainer();
                public class EnumerationValuePropertyMappingControllerActionContainer
                {
                    public ActionLink Mapped(System.Int64 propertyKeyMappingRuleId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EnumerationValuePropertyMapping", "MappedAsync", options, new ActionParameter("propertyKeyMappingRuleId", propertyKeyMappingRuleId));
                    }
                    public ActionLink SearchPropertyDefinitionOptionsForMultiChoice(System.Int64 keyPropertyRuleMappingId, System.Int32 providerPropertyValueId, System.String? query = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EnumerationValuePropertyMapping", "SearchPropertyDefinitionOptionsForMultiChoiceAsync", options, new ActionParameter("keyPropertyRuleMappingId", keyPropertyRuleMappingId), new ActionParameter("providerPropertyValueId", providerPropertyValueId), new ActionParameter("query", query));
                    }
                    public ActionLink SearchPropertyDefinitionOptionsForSingleChoice(System.Int32 propertyDefinitionId, System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EnumerationValuePropertyMapping", "SearchPropertyDefinitionOptionsForSingleChoiceAsync", options, new ActionParameter("propertyDefinitionId", propertyDefinitionId), new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.ErpMenu
                public static readonly ErpMenuControllerActionContainer ErpMenuController = new ErpMenuControllerActionContainer();
                public class ErpMenuControllerActionContainer
                {
                    public ActionLink ItemEdit(object erpMenuItem, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ErpMenu", "ItemEdit", options, new ActionParameter("id", erpMenuItem));
                    }
                }
                #endregion

                #region Erp.EuHubCustomsDeclaration
                public static readonly EuHubCustomsDeclarationControllerActionContainer EuHubCustomsDeclarationController = new EuHubCustomsDeclarationControllerActionContainer();
                public class EuHubCustomsDeclarationControllerActionContainer
                {
                    public ActionLink PurchaseOrder(System.Int32 purchaseOrderId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EuHubCustomsDeclaration", "PurchaseOrder", options, new ActionParameter("purchaseOrderId", purchaseOrderId));
                    }
                    public ActionLink Shipment(System.Int32 shipmentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EuHubCustomsDeclaration", "Shipment", options, new ActionParameter("shipmentId", shipmentId));
                    }
                }
                #endregion

                #region Erp.EuHubShipmentDetails
                public static readonly EuHubShipmentDetailsControllerActionContainer EuHubShipmentDetailsController = new EuHubShipmentDetailsControllerActionContainer();
                public class EuHubShipmentDetailsControllerActionContainer
                {
                    public ActionLink Shipment(System.Int32 shipmentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EuHubShipmentDetails", "Shipment", options, new ActionParameter("shipmentId", shipmentId));
                    }
                }
                #endregion

                #region Erp.EuHubShipments
                public static readonly EuHubShipmentsControllerActionContainer EuHubShipmentsController = new EuHubShipmentsControllerActionContainer();
                public class EuHubShipmentsControllerActionContainer
                {
                    public ActionLink PurchaseOrder(int orderId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("EuHubShipments", "PurchaseOrder", options, new ActionParameter("id", orderId));
                    }
                }
                #endregion

                #region Erp.ExcelOrderingList
                public static readonly ExcelOrderingListControllerActionContainer ExcelOrderingListController = new ExcelOrderingListControllerActionContainer();
                public class ExcelOrderingListControllerActionContainer
                {
                    public ActionLink Export(int supplierId, System.Collections.Generic.IReadOnlyList<int> productIds, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ExcelOrderingList", "Export", options, new ActionParameter("id", supplierId), new ActionParameter("productIds", productIds));
                    }
                }
                #endregion

                #region Erp.FlashDeliveryReturns
                public static readonly FlashDeliveryReturnsControllerActionContainer FlashDeliveryReturnsController = new FlashDeliveryReturnsControllerActionContainer();
                public class FlashDeliveryReturnsControllerActionContainer
                {
                    public ActionLink FromTrolley(System.Int32 trolleyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("FlashDeliveryReturns", "FromTrolley", options, new ActionParameter("trolleyId", trolleyId));
                    }
                    public ActionLink HandleMissingArticle(System.Int32 articleId, System.Int32 trolleyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("FlashDeliveryReturns", "HandleMissingArticle", options, new ActionParameter("articleId", articleId), new ActionParameter("trolleyId", trolleyId));
                    }
                    public ActionLink MovePickUpArticlesToTemporaryCompartment(System.Int32 trolleyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("FlashDeliveryReturns", "MovePickUpArticlesToTemporaryCompartment", options, new ActionParameter("trolleyId", trolleyId));
                    }
                }
                #endregion

                #region Erp.GermanCustomsExportDocument
                public static readonly GermanCustomsExportDocumentControllerActionContainer GermanCustomsExportDocumentController = new GermanCustomsExportDocumentControllerActionContainer();
                public class GermanCustomsExportDocumentControllerActionContainer
                {
                    public ActionLink GermanCustomsExportDocument(object germanCustomsDocument, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("GermanCustomsExportDocument", "GermanCustomsExportDocumentAsync", options, new ActionParameter("id", germanCustomsDocument));
                    }
                }
                #endregion

                #region Erp.GermanCustomsImportDocument
                public static readonly GermanCustomsImportDocumentControllerActionContainer GermanCustomsImportDocumentController = new GermanCustomsImportDocumentControllerActionContainer();
                public class GermanCustomsImportDocumentControllerActionContainer
                {
                    public ActionLink GermanCustomsImportDocument(object germanCustomsDocument, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("GermanCustomsImportDocument", "GermanCustomsImportDocumentAsync", options, new ActionParameter("id", germanCustomsDocument));
                    }
                }
                #endregion

                #region Erp.HandlingUnit
                public static readonly HandlingUnitControllerActionContainer HandlingUnitController = new HandlingUnitControllerActionContainer();
                public class HandlingUnitControllerActionContainer
                {
                    public ActionLink Show(int handlingUnitId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("HandlingUnit", "Show", options, new ActionParameter("id", handlingUnitId));
                    }
                }
                #endregion

                #region Erp.Image
                public static readonly ImageControllerActionContainer ImageController = new ImageControllerActionContainer();
                public class ImageControllerActionContainer
                {
                    public ActionLink ShowPortalImagePortalSpecific(System.String fileName, System.Int32 portalId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Image", "ShowPortalImagePortalSpecific", options, new ActionParameter("fileName", fileName), new ActionParameter("portalId", portalId));
                    }
                }
                #endregion

                #region Erp.ImageCropping
                public static readonly ImageCroppingControllerActionContainer ImageCroppingController = new ImageCroppingControllerActionContainer();
                public class ImageCroppingControllerActionContainer
                {
                    public ActionLink ImageCropped(object file, System.Int32 x, System.Int32 y, System.Int32 w, System.Int32 h, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ImageCropping", "ImageCropped", options, new ActionParameter("id", file), new ActionParameter("x", x), new ActionParameter("y", y), new ActionParameter("w", w), new ActionParameter("h", h));
                    }
                    public ActionLink Save(object file, System.Int32 x, System.Int32 y, System.Int32 w, System.Int32 h, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ImageCropping", "Save", options, new ActionParameter("id", file), new ActionParameter("x", x), new ActionParameter("y", y), new ActionParameter("w", w), new ActionParameter("h", h));
                    }
                    public ActionLink ShowById(System.Int32 fileId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ImageCropping", "ShowById", options, new ActionParameter("fileId", fileId));
                    }
                }
                #endregion

                #region Erp.ImportedDeliveryNote
                public static readonly ImportedDeliveryNoteControllerActionContainer ImportedDeliveryNoteController = new ImportedDeliveryNoteControllerActionContainer();
                public class ImportedDeliveryNoteControllerActionContainer
                {
                    public ActionLink Show(object customerEdiData, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ImportedDeliveryNote", "Show", options, new ActionParameter("id", customerEdiData));
                    }
                }
                #endregion

                #region Erp.IncomingParcel
                public static readonly IncomingParcelControllerActionContainer IncomingParcelController = new IncomingParcelControllerActionContainer();
                public class IncomingParcelControllerActionContainer
                {
                    public ActionLink ProductsDetail(int incomingParcelId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("IncomingParcel", "ProductsDetail", options, new ActionParameter("id", incomingParcelId));
                    }
                    public ActionLink Show(int incomingParcelId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("IncomingParcel", "Show", options, new ActionParameter("id", incomingParcelId));
                    }
                }
                #endregion

                #region Erp.IncomingShipmentMatching
                public static readonly IncomingShipmentMatchingControllerActionContainer IncomingShipmentMatchingController = new IncomingShipmentMatchingControllerActionContainer();
                public class IncomingShipmentMatchingControllerActionContainer
                {
                    public ActionLink MatchPosition(System.Int64 incomingShipmentId, int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("IncomingShipmentMatching", "MatchPositionAsync", options, new ActionParameter("incomingShipmentId", incomingShipmentId), new ActionParameter("productId", productId));
                    }
                    public ActionLink Show(System.Int64 incomingShipmentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("IncomingShipmentMatching", "ShowAsync", options, new ActionParameter("incomingShipmentId", incomingShipmentId));
                    }
                }
                #endregion

                #region Erp.Invoice
                public static readonly InvoiceControllerActionContainer InvoiceController = new InvoiceControllerActionContainer();
                public class InvoiceControllerActionContainer
                {
                    public ActionLink DownloadFromArchive(System.String archiveIdentifier, System.String fileName, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Invoice", "DownloadFromArchiveAsync", options, new ActionParameter("archiveIdentifier", archiveIdentifier), new ActionParameter("fileName", fileName));
                    }
                    public ActionLink Show(object invoice, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Invoice", "ShowAsync", options, new ActionParameter("id", invoice));
                    }
                }
                #endregion

                #region Erp.InvoiceFile
                public static readonly InvoiceFileControllerActionContainer InvoiceFileController = new InvoiceFileControllerActionContainer();
                public class InvoiceFileControllerActionContainer
                {
                    public ActionLink InvoiceFile(object invoiceFile, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("InvoiceFile", "InvoiceFileAsync", options, new ActionParameter("id", invoiceFile));
                    }
                }
                #endregion

                #region Erp.InvoicePriceDifference
                public static readonly InvoicePriceDifferenceControllerActionContainer InvoicePriceDifferenceController = new InvoicePriceDifferenceControllerActionContainer();
                public class InvoicePriceDifferenceControllerActionContainer
                {
                    public ActionLink ListForNotification(object productManager, object supplier, object invoice, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("InvoicePriceDifference", "ListForNotification", options, new ActionParameter("id", productManager), new ActionParameter("supplier", supplier), new ActionParameter("invoice", invoice));
                    }
                    public ActionLink SearchBrands(System.String? searchTerm = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("InvoicePriceDifference", "SearchBrands", options, new ActionParameter("searchTerm", searchTerm));
                    }
                }
                #endregion

                #region Erp.Invoicing
                public static readonly InvoicingControllerActionContainer InvoicingController = new InvoicingControllerActionContainer();
                public class InvoicingControllerActionContainer
                {
                    public ActionLink Show(object invoicing, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Invoicing", "Show", options, new ActionParameter("id", invoicing));
                    }
                }
                #endregion

                #region Erp.Item
                public static readonly ItemControllerActionContainer ItemController = new ItemControllerActionContainer();
                public class ItemControllerActionContainer
                {
                    public ActionLink Show(object item, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Item", "Show", options, new ActionParameter("id", item));
                    }
                }
                #endregion

                #region Erp.ItemProductStaticAvailabilityCorrection
                public static readonly ItemProductStaticAvailabilityCorrectionControllerActionContainer ItemProductStaticAvailabilityCorrectionController = new ItemProductStaticAvailabilityCorrectionControllerActionContainer();
                public class ItemProductStaticAvailabilityCorrectionControllerActionContainer
                {
                    public ActionLink FullTableDetail(int articleId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticAvailabilityCorrection", "FullTableDetail", options, new ActionParameter("id", articleId));
                    }
                }
                #endregion

                #region Erp.ItemProductStatic
                public static readonly ItemProductStaticControllerActionContainer ItemProductStaticController = new ItemProductStaticControllerActionContainer();
                public class ItemProductStaticControllerActionContainer
                {
                    public ActionLink BookToDifferentWarehouseCompartment(int itemProductStaticId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStatic", "BookToDifferentWarehouseCompartment", options, new ActionParameter("id", itemProductStaticId));
                    }
                    public ActionLink FullTableDetail(System.Collections.Generic.IReadOnlyList<int> ipsIds, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStatic", "FullTableDetail", options, new ActionParameter("ipsIds", ipsIds));
                    }
                    public ActionLink LostAndFound(int productMandatorCountryId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStatic", "LostAndFound", options, new ActionParameter("id", productMandatorCountryId));
                    }
                    public ActionLink Search(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStatic", "Search", options);
                    }
                    public ActionLink Show(int itemProductStaticId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStatic", "Show", options, new ActionParameter("id", itemProductStaticId));
                    }
                    public ActionLink StoringFinished(int itemProductStaticId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStatic", "StoringFinished", options, new ActionParameter("id", itemProductStaticId));
                    }
                    public ActionLink UndoBookingToStoringTrolley(int itemProductStaticId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStatic", "UndoBookingToStoringTrolley", options, new ActionParameter("id", itemProductStaticId));
                    }
                }
                #endregion

                #region Erp.ItemProductStaticRefurbished
                public static readonly ItemProductStaticRefurbishedControllerActionContainer ItemProductStaticRefurbishedController = new ItemProductStaticRefurbishedControllerActionContainer();
                public class ItemProductStaticRefurbishedControllerActionContainer
                {
                    public ActionLink FromItemProductStaticLightNew(object itemProductStatic, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRefurbished", "FromItemProductStaticLightNew", options, new ActionParameter("id", itemProductStatic));
                    }
                    public ActionLink FromItemProductStaticNew(object itemProductStatic, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRefurbished", "FromItemProductStaticNew", options, new ActionParameter("id", itemProductStatic));
                    }
                    public ActionLink FromItemProductStaticRmaLightNew(object itemProductStaticRma, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRefurbished", "FromItemProductStaticRmaLightNew", options, new ActionParameter("id", itemProductStaticRma));
                    }
                    public ActionLink FromItemProductStaticRmaNew(object itemProductStaticRma, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRefurbished", "FromItemProductStaticRmaNew", options, new ActionParameter("id", itemProductStaticRma));
                    }
                    public ActionLink Show(object itemProductStaticRefurbished, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRefurbished", "Show", options, new ActionParameter("id", itemProductStaticRefurbished));
                    }
                }
                #endregion

                #region Erp.ItemProductStaticRma
                public static readonly ItemProductStaticRmaControllerActionContainer ItemProductStaticRmaController = new ItemProductStaticRmaControllerActionContainer();
                public class ItemProductStaticRmaControllerActionContainer
                {
                    public ActionLink FromItemSelectionBroughtToShopNew(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "FromItemSelectionBroughtToShopNew", options);
                    }
                    public ActionLink FromItemSelectionNoPhysicalReceptionNew(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "FromItemSelectionNoPhysicalReceptionNew", options);
                    }
                    public ActionLink FromItemSelectionNotYetReceivedNew(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "FromItemSelectionNotYetReceivedNew", options);
                    }
                    public ActionLink FromPostActionNew(System.Int32 rmaReceivingTypeId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "FromPostActionNew", options, new ActionParameter("rmaReceivingTypeId", rmaReceivingTypeId));
                    }
                    public ActionLink FromRetailNew(System.Int32 serviceCaseId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "FromRetailNew", options, new ActionParameter("serviceCaseId", serviceCaseId));
                    }
                    public ActionLink FromWarehouseCompartmentNew(object itemProduct, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "FromWarehouseCompartmentNew", options, new ActionParameter("id", itemProduct));
                    }
                    public ActionLink New(System.Collections.Generic.List<object> itemProducts, System.String handlingUnitBarcode, System.String trolleyCompartmentBarcode, System.String warehouseCompartmentBarcode, System.Int32 rmaReceivingTypeId, System.Int32? serviceCaseId = null, System.Boolean registerMissingProductInformation = true, System.Boolean isFlashDelivery = false, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "New", options, new ActionParameter("itemProducts", itemProducts), new ActionParameter("handlingUnitBarcode", handlingUnitBarcode), new ActionParameter("trolleyCompartmentBarcode", trolleyCompartmentBarcode), new ActionParameter("warehouseCompartmentBarcode", warehouseCompartmentBarcode), new ActionParameter("rmaReceivingTypeId", rmaReceivingTypeId), new ActionParameter("serviceCaseId", serviceCaseId), new ActionParameter("registerMissingProductInformation", registerMissingProductInformation), new ActionParameter("isFlashDelivery", isFlashDelivery));
                    }
                    public ActionLink PreregisterNew(System.Int32 serviceCaseId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "PreregisterNew", options, new ActionParameter("serviceCaseId", serviceCaseId));
                    }
                    public ActionLink RegisterInfo(System.Collections.Generic.List<object> itemProducts, System.String redirectUrlAfterRegistration, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "RegisterInfo", options, new ActionParameter("itemProducts", itemProducts), new ActionParameter("redirectUrlAfterRegistration", redirectUrlAfterRegistration));
                    }
                    public ActionLink Show(object itemProductStaticRma, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemProductStaticRma", "Show", options, new ActionParameter("id", itemProductStaticRma));
                    }
                }
                #endregion

                #region Erp.ItemRmaAccessory
                public static readonly ItemRmaAccessoryControllerActionContainer ItemRmaAccessoryController = new ItemRmaAccessoryControllerActionContainer();
                public class ItemRmaAccessoryControllerActionContainer
                {
                    public ActionLink FromItemRmaDetail(object itemRmaAccessory, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemRmaAccessory", "FromItemRmaDetail", options, new ActionParameter("id", itemRmaAccessory));
                    }
                    public ActionLink ItemRmaAccessoryWithItemProductStaticRmaDetail(object itemRmaAccessory, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ItemRmaAccessory", "ItemRmaAccessoryWithItemProductStaticRmaDetail", options, new ActionParameter("id", itemRmaAccessory));
                    }
                }
                #endregion

                #region Erp.JavaScript
                public static readonly JavaScriptControllerActionContainer JavaScriptController = new JavaScriptControllerActionContainer();
                public class JavaScriptControllerActionContainer
                {
                    public ActionLink ShowScript(System.String name, System.String version, System.String folder, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("JavaScript", "ShowScriptAsync", options, new ActionParameter("name", name), new ActionParameter("version", version), new ActionParameter("folder", folder));
                    }
                }
                #endregion

                #region Erp.JobApplication
                public static readonly JobApplicationControllerActionContainer JobApplicationController = new JobApplicationControllerActionContainer();
                public class JobApplicationControllerActionContainer
                {
                    public ActionLink ListForJob(object jobOffer, System.Int32 jobApplicationStateId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("JobApplication", "ListForJobAsync", options, new ActionParameter("id", jobOffer), new ActionParameter("jobApplicationStateId", jobApplicationStateId));
                    }
                    public ActionLink Show(object jobApplication, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("JobApplication", "Show", options, new ActionParameter("id", jobApplication));
                    }
                }
                #endregion

                #region Erp.JobApplicationFile
                public static readonly JobApplicationFileControllerActionContainer JobApplicationFileController = new JobApplicationFileControllerActionContainer();
                public class JobApplicationFileControllerActionContainer
                {
                    public ActionLink Detail(object jobApplicationFile, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("JobApplicationFile", "DetailAsync", options, new ActionParameter("id", jobApplicationFile));
                    }
                }
                #endregion

                #region Erp.JobSkill
                public static readonly JobSkillControllerActionContainer JobSkillController = new JobSkillControllerActionContainer();
                public class JobSkillControllerActionContainer
                {
                    public ActionLink SearchJobSkill(System.String q, int jobOfferId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("JobSkill", "SearchJobSkill", options, new ActionParameter("q", q), new ActionParameter("jobOfferId", jobOfferId));
                    }
                }
                #endregion

                #region Erp.Login
                public static readonly LoginControllerActionContainer LoginController = new LoginControllerActionContainer();
                public class LoginControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Login", "Default", options);
                    }
                    public ActionLink RemoveImpersonation(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Login", "RemoveImpersonation", options);
                    }
                }
                #endregion

                #region Erp.LogisticsHandoverZone
                public static readonly LogisticsHandoverZoneControllerActionContainer LogisticsHandoverZoneController = new LogisticsHandoverZoneControllerActionContainer();
                public class LogisticsHandoverZoneControllerActionContainer
                {
                    public ActionLink Show(object logisticsHandoverZone, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsHandoverZone", "Show", options, new ActionParameter("id", logisticsHandoverZone));
                    }
                }
                #endregion

                #region Erp.LogisticsIpsRouting
                public static readonly LogisticsIpsRoutingControllerActionContainer LogisticsIpsRoutingController = new LogisticsIpsRoutingControllerActionContainer();
                public class LogisticsIpsRoutingControllerActionContainer
                {
                    public ActionLink Route(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsIpsRouting", "Route", options);
                    }
                    public ActionLink RouteRecirculation(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsIpsRouting", "RouteRecirculation", options);
                    }
                    public ActionLink SetErrorCase(System.Int64 errorCaseId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsIpsRouting", "SetErrorCase", options, new ActionParameter("errorCaseId", errorCaseId));
                    }
                }
                #endregion

                #region Erp.LogisticsProblem
                public static readonly LogisticsProblemControllerActionContainer LogisticsProblemController = new LogisticsProblemControllerActionContainer();
                public class LogisticsProblemControllerActionContainer
                {
                    public ActionLink Create(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsProblem", "CreateAsync", options);
                    }
                }
                #endregion

                #region Erp.LogisticsProduct
                public static readonly LogisticsProductControllerActionContainer LogisticsProductController = new LogisticsProductControllerActionContainer();
                public class LogisticsProductControllerActionContainer
                {
                    public ActionLink Show(System.Int64 id, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsProduct", "ShowAsync", options, new ActionParameter("id", id));
                    }
                    public ActionLink ShowWithProductId(System.Int32 productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsProduct", "ShowWithProductIdAsync", options, new ActionParameter("productId", productId));
                    }
                }
                #endregion

                #region Erp.LogisticsProvider
                public static readonly LogisticsProviderControllerActionContainer LogisticsProviderController = new LogisticsProviderControllerActionContainer();
                public class LogisticsProviderControllerActionContainer
                {
                    public ActionLink TableDetail(object logisticsProvider, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsProvider", "TableDetail", options, new ActionParameter("id", logisticsProvider));
                    }
                }
                #endregion

                #region Erp.LogisticsTicket
                public static readonly LogisticsTicketControllerActionContainer LogisticsTicketController = new LogisticsTicketControllerActionContainer();
                public class LogisticsTicketControllerActionContainer
                {
                    public ActionLink New(object logisticsTicket, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsTicket", "New", options, new ActionParameter("id", logisticsTicket));
                    }
                    public ActionLink Show(object logisticsTicket, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("LogisticsTicket", "Show", options, new ActionParameter("id", logisticsTicket));
                    }
                }
                #endregion

                #region Erp.Logout
                public static readonly LogoutControllerActionContainer LogoutController = new LogoutControllerActionContainer();
                public class LogoutControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Logout", "Default", options);
                    }
                }
                #endregion

                #region Erp.MailDeliveryOrder
                public static readonly MailDeliveryOrderControllerActionContainer MailDeliveryOrderController = new MailDeliveryOrderControllerActionContainer();
                public class MailDeliveryOrderControllerActionContainer
                {
                    public ActionLink DeleteDeliveryWindowFromOrder(System.Int32 orderId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MailDeliveryOrder", "DeleteDeliveryWindowFromOrderAsync", options, new ActionParameter("orderId", orderId));
                    }
                }
                #endregion

                #region Erp.ManualPackingUnit
                public static readonly ManualPackingUnitControllerActionContainer ManualPackingUnitController = new ManualPackingUnitControllerActionContainer();
                public class ManualPackingUnitControllerActionContainer
                {
                    public ActionLink ManualPackingUnitCreation(object order, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ManualPackingUnit", "ManualPackingUnitCreation", options, new ActionParameter("id", order));
                    }
                }
                #endregion

                #region Erp.MarketingPageContent
                public static readonly MarketingPageContentControllerActionContainer MarketingPageContentController = new MarketingPageContentControllerActionContainer();
                public class MarketingPageContentControllerActionContainer
                {
                    public ActionLink FromExistingNew(object marketingPageContent, object language, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketingPageContent", "FromExistingNew", options, new ActionParameter("id", marketingPageContent), new ActionParameter("language", language));
                    }
                }
                #endregion

                #region Erp.MarketingPageContributor
                public static readonly MarketingPageContributorControllerActionContainer MarketingPageContributorController = new MarketingPageContributorControllerActionContainer();
                public class MarketingPageContributorControllerActionContainer
                {
                    public ActionLink AddAdditionalContributor(object marketingPage, int marketingPageContributorTypeId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketingPageContributor", "AddAdditionalContributorAsync", options, new ActionParameter("id", marketingPage), new ActionParameter("marketingPageContributorTypeId", marketingPageContributorTypeId));
                    }
                }
                #endregion

                #region Erp.MarketingPage
                public static readonly MarketingPageControllerActionContainer MarketingPageController = new MarketingPageControllerActionContainer();
                public class MarketingPageControllerActionContainer
                {
                    public ActionLink ForceInsertNewTranslation(object marketingPage, System.Int32 languageId, System.Boolean externalTranslation, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketingPage", "ForceInsertNewTranslation", options, new ActionParameter("id", marketingPage), new ActionParameter("languageId", languageId), new ActionParameter("externalTranslation", externalTranslation));
                    }
                    public ActionLink InsertNewTranslation(object marketingPage, System.Int32 languageId, System.Boolean externalTranslation, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketingPage", "InsertNewTranslation", options, new ActionParameter("id", marketingPage), new ActionParameter("languageId", languageId), new ActionParameter("externalTranslation", externalTranslation));
                    }
                    public ActionLink SearchMarketingTags(System.String? searchTerm = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketingPage", "SearchMarketingTags", options, new ActionParameter("searchTerm", searchTerm));
                    }
                }
                #endregion

                #region Erp.MarketingTeaser
                public static readonly MarketingTeaserControllerActionContainer MarketingTeaserController = new MarketingTeaserControllerActionContainer();
                public class MarketingTeaserControllerActionContainer
                {
                    public ActionLink ForceInsertNewTranslation(object marketingTeaser, System.Int32 languageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketingTeaser", "ForceInsertNewTranslation", options, new ActionParameter("id", marketingTeaser), new ActionParameter("languageId", languageId));
                    }
                    public ActionLink InsertNewTranslation(object marketingTeaser, System.Int32 languageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketingTeaser", "InsertNewTranslation", options, new ActionParameter("id", marketingTeaser), new ActionParameter("languageId", languageId));
                    }
                }
                #endregion

                #region Erp.MarketplaceOffer
                public static readonly MarketplaceOfferControllerActionContainer MarketplaceOfferController = new MarketplaceOfferControllerActionContainer();
                public class MarketplaceOfferControllerActionContainer
                {
                    public ActionLink Table(System.Int32 productId, System.String countryCode, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketplaceOffer", "TableAsync", options, new ActionParameter("productId", productId), new ActionParameter("countryCode", countryCode));
                    }
                }
                #endregion

                #region Erp.MarketplaceSupplierConfiguration
                public static readonly MarketplaceSupplierConfigurationControllerActionContainer MarketplaceSupplierConfigurationController = new MarketplaceSupplierConfigurationControllerActionContainer();
                public class MarketplaceSupplierConfigurationControllerActionContainer
                {
                    public ActionLink ToggleHasSwissFiscalRepresentation(int supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MarketplaceSupplierConfiguration", "ToggleHasSwissFiscalRepresentationAsync", options, new ActionParameter("id", supplierId));
                    }
                }
                #endregion

                #region Erp.MergePropertyDefinition
                public static readonly MergePropertyDefinitionControllerActionContainer MergePropertyDefinitionController = new MergePropertyDefinitionControllerActionContainer();
                public class MergePropertyDefinitionControllerActionContainer
                {
                    public ActionLink Show(System.Int32 remainingPropertyDefinitionId, System.Int32? maximumPropertyValueReferences, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MergePropertyDefinition", "ShowAsync", options, new ActionParameter("remainingPropertyDefinitionId", remainingPropertyDefinitionId), new ActionParameter("maximumPropertyValueReferences", maximumPropertyValueReferences));
                    }
                }
                #endregion

                #region Erp.MergePropertyDefinitionOption
                public static readonly MergePropertyDefinitionOptionControllerActionContainer MergePropertyDefinitionOptionController = new MergePropertyDefinitionOptionControllerActionContainer();
                public class MergePropertyDefinitionOptionControllerActionContainer
                {
                    public ActionLink Show(System.Int32 remainingPropertyDefinitionOptionId, System.Int32? maximumPropertyValueReferences, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MergePropertyDefinitionOption", "ShowAsync", options, new ActionParameter("remainingPropertyDefinitionOptionId", remainingPropertyDefinitionOptionId), new ActionParameter("maximumPropertyValueReferences", maximumPropertyValueReferences));
                    }
                }
                #endregion

                #region Erp.MvcControler
                public static readonly MvcControlerControllerActionContainer MvcControlerController = new MvcControlerControllerActionContainer();
                public class MvcControlerControllerActionContainer
                {
                    public ActionLink IncrementalSearch(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("MvcControler", "IncrementalSearch", options);
                    }
                }
                #endregion

                #region Erp.Order
                public static readonly OrderControllerActionContainer OrderController = new OrderControllerActionContainer();
                public class OrderControllerActionContainer
                {
                    public ActionLink AddBlockingState(object order, object orderBlockingState, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Order", "AddBlockingState", options, new ActionParameter("id", order), new ActionParameter("orderBlockingState", orderBlockingState));
                    }
                    public ActionLink AdvancedSearch(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Order", "AdvancedSearch", options);
                    }
                    public ActionLink PdfOrderConfirmation(object order, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Order", "PdfOrderConfirmationAsync", options, new ActionParameter("id", order));
                    }
                    public ActionLink PdfPickMupInvitationFromPickMupParcel(object parcel, System.Int32 orderId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Order", "PdfPickMupInvitationFromPickMupParcel", options, new ActionParameter("id", parcel), new ActionParameter("orderId", orderId));
                    }
                    public ActionLink PdfProofofPurchase(object order, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Order", "PdfProofofPurchaseAsync", options, new ActionParameter("id", order));
                    }
                    public ActionLink RemoveBlockingState(object order, object orderBlockingState, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Order", "RemoveBlockingState", options, new ActionParameter("id", order), new ActionParameter("orderBlockingState", orderBlockingState));
                    }
                    public ActionLink Show(object order, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Order", "ShowAsync", options, new ActionParameter("id", order));
                    }
                }
                #endregion

                #region Erp.OrderFile
                public static readonly OrderFileControllerActionContainer OrderFileController = new OrderFileControllerActionContainer();
                public class OrderFileControllerActionContainer
                {
                    public ActionLink OrderFile(object orderFile, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("OrderFile", "OrderFileAsync", options, new ActionParameter("id", orderFile));
                    }
                }
                #endregion

                #region Erp.OrderPosition
                public static readonly OrderPositionControllerActionContainer OrderPositionController = new OrderPositionControllerActionContainer();
                public class OrderPositionControllerActionContainer
                {
                    public ActionLink AddMissingPowerAdapter(object item, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("OrderPosition", "AddMissingPowerAdapterAsync", options, new ActionParameter("id", item));
                    }
                    public ActionLink Show(object item, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("OrderPosition", "ShowAsync", options, new ActionParameter("id", item));
                    }
                    public ActionLink SupplierProductFlow(object item, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("OrderPosition", "SupplierProductFlow", options, new ActionParameter("id", item));
                    }
                }
                #endregion

                #region Erp.Packing
                public static readonly PackingControllerActionContainer PackingController = new PackingControllerActionContainer();
                public class PackingControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "DefaultAsync", options);
                    }
                    public ActionLink StartPacking(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingAsync", options);
                    }
                    public ActionLink StartPackingOnMachine(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingOnMachineAsync", options);
                    }
                    public ActionLink StartPackingPackingUnit(int packingUnitId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingPackingUnitAsync", options, new ActionParameter("id", packingUnitId));
                    }
                    public ActionLink StartPackingPackingUnitOnMachine(int packingUnitId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingPackingUnitOnMachineAsync", options, new ActionParameter("id", packingUnitId));
                    }
                    public ActionLink StartPackingTransportBin(int transportBinId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingTransportBinAsync", options, new ActionParameter("id", transportBinId));
                    }
                    public ActionLink StartPackingTransportBinOnMachine(int transportBinId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingTransportBinOnMachineAsync", options, new ActionParameter("id", transportBinId));
                    }
                    public ActionLink StartPackingTrolley(int trolleyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingTrolleyAsync", options, new ActionParameter("id", trolleyId));
                    }
                    public ActionLink StartPackingTrolleyOnMachine(int trolleyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "StartPackingTrolleyOnMachineAsync", options, new ActionParameter("id", trolleyId));
                    }
                    public ActionLink Widget(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Packing", "WidgetAsync", options);
                    }
                }
                #endregion

                #region Erp.PackingUnit
                public static readonly PackingUnitControllerActionContainer PackingUnitController = new PackingUnitControllerActionContainer();
                public class PackingUnitControllerActionContainer
                {
                    public ActionLink ReprintPackingUnitLabel(int packingUnitId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PackingUnit", "ReprintPackingUnitLabelAsync", options, new ActionParameter("id", packingUnitId));
                    }
                    public ActionLink RestartPackingPackingUnit(object packingUnit, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PackingUnit", "RestartPackingPackingUnit", options, new ActionParameter("id", packingUnit));
                    }
                    public ActionLink RestartPackingPackingUnitOnMachine(object packingUnit, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PackingUnit", "RestartPackingPackingUnitOnMachine", options, new ActionParameter("id", packingUnit));
                    }
                    public ActionLink SearchAjax(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PackingUnit", "SearchAjax", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchPickingTour(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PackingUnit", "SearchPickingTour", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object packingUnit, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PackingUnit", "Show", options, new ActionParameter("id", packingUnit));
                    }
                }
                #endregion

                #region Erp.Pallet
                public static readonly PalletControllerActionContainer PalletController = new PalletControllerActionContainer();
                public class PalletControllerActionContainer
                {
                    public ActionLink AddToCentralWarehouseTransfer(int palletId, int originWarehouseId, int targetWarehouseId, System.Int32 transferType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Pallet", "AddToCentralWarehouseTransferAsync", options, new ActionParameter("id", palletId), new ActionParameter("originWarehouseId", originWarehouseId), new ActionParameter("targetWarehouseId", targetWarehouseId), new ActionParameter("transferType", transferType));
                    }
                    public ActionLink FromBarcode(System.String code, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Pallet", "FromBarcode", options, new ActionParameter("code", code));
                    }
                    public ActionLink Show(int palletId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Pallet", "Show", options, new ActionParameter("id", palletId));
                    }
                }
                #endregion

                #region Erp.Parcel
                public static readonly ParcelControllerActionContainer ParcelController = new ParcelControllerActionContainer();
                public class ParcelControllerActionContainer
                {
                    public ActionLink Avzo(object swissPostAVZOBinaryData, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Parcel", "AvzoAsync", options, new ActionParameter("id", swissPostAVZOBinaryData));
                    }
                    public ActionLink BoxDetail(object parcel, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Parcel", "BoxDetail", options, new ActionParameter("id", parcel));
                    }
                    public ActionLink PrintParcel(object parcel, int printerId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Parcel", "PrintParcelAsync", options, new ActionParameter("id", parcel), new ActionParameter("printerId", printerId));
                    }
                    public ActionLink PrintParcels(object pickingTour, int printerId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Parcel", "PrintParcelsAsync", options, new ActionParameter("id", pickingTour), new ActionParameter("printerId", printerId));
                    }
                    public ActionLink SetParcelAsDelivered(object parcel, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Parcel", "SetParcelAsDelivered", options, new ActionParameter("id", parcel));
                    }
                    public ActionLink Show(object parcel, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Parcel", "Show", options, new ActionParameter("id", parcel));
                    }
                }
                #endregion

                #region Erp.ParcelTriage
                public static readonly ParcelTriageControllerActionContainer ParcelTriageController = new ParcelTriageControllerActionContainer();
                public class ParcelTriageControllerActionContainer
                {
                    public ActionLink Default(System.Int32? savedStateId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ParcelTriage", "Default", options, new ActionParameter("savedStateId", savedStateId));
                    }
                }
                #endregion

                #region Erp.PartnerServiceOrder
                public static readonly PartnerServiceOrderControllerActionContainer PartnerServiceOrderController = new PartnerServiceOrderControllerActionContainer();
                public class PartnerServiceOrderControllerActionContainer
                {
                    public ActionLink Show(object partnerServiceOrder, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PartnerServiceOrder", "Show", options, new ActionParameter("id", partnerServiceOrder));
                    }
                }
                #endregion

                #region Erp.Payment
                public static readonly PaymentControllerActionContainer PaymentController = new PaymentControllerActionContainer();
                public class PaymentControllerActionContainer
                {
                    public ActionLink DetachInvoicing(object payment, int invoicingId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Payment", "DetachInvoicing", options, new ActionParameter("id", payment), new ActionParameter("invoicingId", invoicingId));
                    }
                    public ActionLink Show(int paymentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Payment", "Show", options, new ActionParameter("id", paymentId));
                    }
                }
                #endregion

                #region Erp.PaymentOption
                public static readonly PaymentOptionControllerActionContainer PaymentOptionController = new PaymentOptionControllerActionContainer();
                public class PaymentOptionControllerActionContainer
                {
                    public ActionLink BoxDetail(int paymentOptionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PaymentOption", "BoxDetail", options, new ActionParameter("paymentOptionId", paymentOptionId));
                    }
                }
                #endregion

                #region Erp.Person
                public static readonly PersonControllerActionContainer PersonController = new PersonControllerActionContainer();
                public class PersonControllerActionContainer
                {
                    public ActionLink Configuration(object person, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Person", "Configuration", options, new ActionParameter("id", person));
                    }
                    public ActionLink SearchAjax(System.String q, int customerId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Person", "SearchAjax", options, new ActionParameter("q", q), new ActionParameter("customerId", customerId));
                    }
                    public ActionLink SearchWithSelect2(System.String q, int? customerId = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Person", "SearchWithSelect2", options, new ActionParameter("q", q), new ActionParameter("customerId", customerId));
                    }
                    public ActionLink Show(object person, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Person", "ShowAsync", options, new ActionParameter("id", person));
                    }
                }
                #endregion

                #region Erp.PersonPersonalDocument
                public static readonly PersonPersonalDocumentControllerActionContainer PersonPersonalDocumentController = new PersonPersonalDocumentControllerActionContainer();
                public class PersonPersonalDocumentControllerActionContainer
                {
                    public ActionLink PersonPersonalDocumentFile(object document, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PersonPersonalDocument", "PersonPersonalDocumentFileAsync", options, new ActionParameter("id", document));
                    }
                    public ActionLink Show(object personPersonalDocument, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PersonPersonalDocument", "Show", options, new ActionParameter("id", personPersonalDocument));
                    }
                }
                #endregion

                #region Erp.PhysicalQuantityPropertyMapping
                public static readonly PhysicalQuantityPropertyMappingControllerActionContainer PhysicalQuantityPropertyMappingController = new PhysicalQuantityPropertyMappingControllerActionContainer();
                public class PhysicalQuantityPropertyMappingControllerActionContainer
                {
                    public ActionLink Show(System.Int64 physicalQuantityMappingRuleId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PhysicalQuantityPropertyMapping", "Show", options, new ActionParameter("physicalQuantityMappingRuleId", physicalQuantityMappingRuleId));
                    }
                }
                #endregion

                #region Erp.PickingTour
                public static readonly PickingTourControllerActionContainer PickingTourController = new PickingTourControllerActionContainer();
                public class PickingTourControllerActionContainer
                {
                    public ActionLink Show(object pickingTour, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PickingTour", "Show", options, new ActionParameter("id", pickingTour));
                    }
                }
                #endregion

                #region Erp.PlannedPurchases
                public static readonly PlannedPurchasesControllerActionContainer PlannedPurchasesController = new PlannedPurchasesControllerActionContainer();
                public class PlannedPurchasesControllerActionContainer
                {
                    public ActionLink DeveloperBoxDetail(System.Int32 productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PlannedPurchases", "DeveloperBoxDetail", options, new ActionParameter("productId", productId));
                    }
                    public ActionLink PlannedPurchasesDetail(System.Int32 productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PlannedPurchases", "PlannedPurchasesDetailAsync", options, new ActionParameter("productId", productId));
                    }
                }
                #endregion

                #region Erp.PriceBotRuleOld
                public static readonly PriceBotRuleOldControllerActionContainer PriceBotRuleOldController = new PriceBotRuleOldControllerActionContainer();
                public class PriceBotRuleOldControllerActionContainer
                {
                    public ActionLink Default(object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PriceBotRuleOld", "Default", options, new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.PriceProtection
                public static readonly PriceProtectionControllerActionContainer PriceProtectionController = new PriceProtectionControllerActionContainer();
                public class PriceProtectionControllerActionContainer
                {
                    public ActionLink StockProtectionOrderProductFile(object stockProtectionOrderProductAssignment, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PriceProtection", "StockProtectionOrderProductFileAsync", options, new ActionParameter("id", stockProtectionOrderProductAssignment));
                    }
                }
                #endregion

                #region Erp.ProductAvailability
                public static readonly ProductAvailabilityControllerActionContainer ProductAvailabilityController = new ProductAvailabilityControllerActionContainer();
                public class ProductAvailabilityControllerActionContainer
                {
                    public ActionLink ShowProductAvailability(System.Int32 productId, System.Int32 salesOfferId, System.Int32 salesOfferType, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductAvailability", "ShowProductAvailability", options, new ActionParameter("productId", productId), new ActionParameter("salesOfferId", salesOfferId), new ActionParameter("salesOfferType", salesOfferType), new ActionParameter("country", country));
                    }
                    public ActionLink ShowProductAvailabilityWithAsyncLoading(System.Int32 productId, System.Int32 salesOfferId, System.Int32 salesOfferType, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductAvailability", "ShowProductAvailabilityWithAsyncLoading", options, new ActionParameter("productId", productId), new ActionParameter("salesOfferId", salesOfferId), new ActionParameter("salesOfferType", salesOfferType), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.Product
                public static readonly ProductControllerActionContainer ProductController = new ProductControllerActionContainer();
                public class ProductControllerActionContainer
                {
                    public ActionLink AdvancedSearch(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "AdvancedSearchAsync", options);
                    }
                    public ActionLink Availability(object product, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "Availability", options, new ActionParameter("id", product));
                    }
                    public ActionLink CustomsInformation(object product, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "CustomsInformation", options, new ActionParameter("id", product));
                    }
                    public ActionLink Evaluation(object product, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "Evaluation", options, new ActionParameter("id", product));
                    }
                    public ActionLink FromBookInMasterBoxDetail(int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "FromBookInMasterBoxDetail", options, new ActionParameter("id", productId));
                    }
                    public ActionLink LogisticsConfigurations(int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "LogisticsConfigurations", options, new ActionParameter("id", productId));
                    }
                    public ActionLink LogisticsGeneral(object product, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "LogisticsGeneral", options, new ActionParameter("id", product));
                    }
                    public ActionLink Multiple(System.Collections.Generic.List<int> ids, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "Multiple", options, new ActionParameter("ids", ids));
                    }
                    public ActionLink New(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "New", options);
                    }
                    public ActionLink Packaging(object product, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "Packaging", options, new ActionParameter("id", product));
                    }
                    public ActionLink ProductGeneral(int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "ProductGeneral", options, new ActionParameter("id", productId));
                    }
                    public ActionLink ProductGeneralWithCountry(int productId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "ProductGeneralWithCountry", options, new ActionParameter("id", productId), new ActionParameter("country", country));
                    }
                    public ActionLink ProductPricing(object product, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "ProductPricing", options, new ActionParameter("id", product), new ActionParameter("country", country));
                    }
                    public ActionLink ProductProperties(object product, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "ProductProperties", options, new ActionParameter("id", product));
                    }
                    public ActionLink PurchasePrices(object product, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "PurchasePrices", options, new ActionParameter("id", product), new ActionParameter("country", country));
                    }
                    public ActionLink SalesOffers(object product, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "SalesOffersAsync", options, new ActionParameter("id", product), new ActionParameter("country", country));
                    }
                    public ActionLink SalesPrice(object product, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "SalesPrice", options, new ActionParameter("id", product), new ActionParameter("country", country));
                    }
                    public ActionLink SearchBrands(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "SearchBrands", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductClasses(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "SearchProductClasses", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductGroups(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "SearchProductGroups", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductTypes(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "SearchProductTypes", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object product, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "Show", options, new ActionParameter("id", product));
                    }
                    public ActionLink ShowWithCountry(object product, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Product", "ShowWithCountry", options, new ActionParameter("id", product), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.ProductDataError
                public static readonly ProductDataErrorControllerActionContainer ProductDataErrorController = new ProductDataErrorControllerActionContainer();
                public class ProductDataErrorControllerActionContainer
                {
                    public ActionLink CorrectTheData(object productDataError, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductDataError", "CorrectTheData", options, new ActionParameter("id", productDataError));
                    }
                }
                #endregion

                #region Erp.ProductDeliveryOptionInhibit
                public static readonly ProductDeliveryOptionInhibitControllerActionContainer ProductDeliveryOptionInhibitController = new ProductDeliveryOptionInhibitControllerActionContainer();
                public class ProductDeliveryOptionInhibitControllerActionContainer
                {
                    public ActionLink AllowDeliveryOptionForAllProductsOfProductType(object productType, System.Int32 deliveryOptionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductDeliveryOptionInhibit", "AllowDeliveryOptionForAllProductsOfProductTypeAsync", options, new ActionParameter("id", productType), new ActionParameter("deliveryOptionId", deliveryOptionId));
                    }
                    public ActionLink InhibitDeliveryOptionForAllProductsOfProductType(object productType, System.Int32 deliveryOptionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductDeliveryOptionInhibit", "InhibitDeliveryOptionForAllProductsOfProductTypeAsync", options, new ActionParameter("id", productType), new ActionParameter("deliveryOptionId", deliveryOptionId));
                    }
                }
                #endregion

                #region Erp.ProductExhibitionSpot
                public static readonly ProductExhibitionSpotControllerActionContainer ProductExhibitionSpotController = new ProductExhibitionSpotControllerActionContainer();
                public class ProductExhibitionSpotControllerActionContainer
                {
                    public ActionLink Show(object productExhibitionSpot, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductExhibitionSpot", "Show", options, new ActionParameter("id", productExhibitionSpot));
                    }
                }
                #endregion

                #region Erp.ProductFee
                public static readonly ProductFeeControllerActionContainer ProductFeeController = new ProductFeeControllerActionContainer();
                public class ProductFeeControllerActionContainer
                {
                    public ActionLink Show(object fee, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductFee", "Show", options, new ActionParameter("id", fee));
                    }
                }
                #endregion

                #region Erp.ProductFilter
                public static readonly ProductFilterControllerActionContainer ProductFilterController = new ProductFilterControllerActionContainer();
                public class ProductFilterControllerActionContainer
                {
                    public ActionLink SearchBrands(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductFilter", "SearchBrands", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductFilters(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductFilter", "SearchProductFilters", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductTypes(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductFilter", "SearchProductTypes", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object productFilter, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductFilter", "Show", options, new ActionParameter("id", productFilter));
                    }
                }
                #endregion

                #region Erp.ProductGroup
                public static readonly ProductGroupControllerActionContainer ProductGroupController = new ProductGroupControllerActionContainer();
                public class ProductGroupControllerActionContainer
                {
                    public ActionLink SearchAjax(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductGroup", "SearchAjax", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object productGroup, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductGroup", "Show", options, new ActionParameter("id", productGroup));
                    }
                }
                #endregion

                #region Erp.ProductGtin
                public static readonly ProductGtinControllerActionContainer ProductGtinController = new ProductGtinControllerActionContainer();
                public class ProductGtinControllerActionContainer
                {
                    public ActionLink Detail(object productGtin, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductGtin", "Detail", options, new ActionParameter("id", productGtin));
                    }
                    public ActionLink FromBookInMasterBoxDetail(System.String gtin, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductGtin", "FromBookInMasterBoxDetail", options, new ActionParameter("gtin", gtin));
                    }
                    public ActionLink FromBookInMasterTableDetail(System.String gtinString, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductGtin", "FromBookInMasterTableDetail", options, new ActionParameter("gtinString", gtinString));
                    }
                    public ActionLink Show(object productGtin, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductGtin", "Show", options, new ActionParameter("id", productGtin));
                    }
                }
                #endregion

                #region Erp.ProductLogistics
                public static readonly ProductLogisticsControllerActionContainer ProductLogisticsController = new ProductLogisticsControllerActionContainer();
                public class ProductLogisticsControllerActionContainer
                {
                    public ActionLink FromProductBoxDetail(int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductLogistics", "FromProductBoxDetail", options, new ActionParameter("id", productId));
                    }
                }
                #endregion

                #region Erp.ProductPackageDimension
                public static readonly ProductPackageDimensionControllerActionContainer ProductPackageDimensionController = new ProductPackageDimensionControllerActionContainer();
                public class ProductPackageDimensionControllerActionContainer
                {
                    public ActionLink ForProductDetail(int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductPackageDimension", "ForProductDetail", options, new ActionParameter("id", productId));
                    }
                }
                #endregion

                #region Erp.ProductRepackType
                public static readonly ProductRepackTypeControllerActionContainer ProductRepackTypeController = new ProductRepackTypeControllerActionContainer();
                public class ProductRepackTypeControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductRepackType", "Default", options);
                    }
                }
                #endregion

                #region Erp.ProductSet
                public static readonly ProductSetControllerActionContainer ProductSetController = new ProductSetControllerActionContainer();
                public class ProductSetControllerActionContainer
                {
                    public ActionLink Show(object productSet, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductSet", "Show", options, new ActionParameter("id", productSet));
                    }
                }
                #endregion

                #region Erp.ProductTypeChangeAssistant
                public static readonly ProductTypeChangeAssistantControllerActionContainer ProductTypeChangeAssistantController = new ProductTypeChangeAssistantControllerActionContainer();
                public class ProductTypeChangeAssistantControllerActionContainer
                {
                    public ActionLink SearchBrands(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductTypeChangeAssistant", "SearchBrands", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchSuppliers(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductTypeChangeAssistant", "SearchSuppliers", options, new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.ProductType
                public static readonly ProductTypeControllerActionContainer ProductTypeController = new ProductTypeControllerActionContainer();
                public class ProductTypeControllerActionContainer
                {
                    public ActionLink Logistics(int productTypeId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductType", "Logistics", options, new ActionParameter("id", productTypeId));
                    }
                    public ActionLink Search(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductType", "Search", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchAjax(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductType", "SearchAjax", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object productType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductType", "Show", options, new ActionParameter("id", productType));
                    }
                    public ActionLink ShowForId(System.Int32 productTypeId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductType", "ShowForId", options, new ActionParameter("productTypeId", productTypeId));
                    }
                }
                #endregion

                #region Erp.ProductTypeMapping
                public static readonly ProductTypeMappingControllerActionContainer ProductTypeMappingController = new ProductTypeMappingControllerActionContainer();
                public class ProductTypeMappingControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductTypeMapping", "Default", options);
                    }
                    public ActionLink EditAll(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductTypeMapping", "EditAll", options);
                    }
                }
                #endregion

                #region Erp.ProductVariant
                public static readonly ProductVariantControllerActionContainer ProductVariantController = new ProductVariantControllerActionContainer();
                public class ProductVariantControllerActionContainer
                {
                    public ActionLink DeleteProductVariantProduct(object productVariantProduct, object productVariantType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductVariant", "DeleteProductVariantProduct", options, new ActionParameter("id", productVariantProduct), new ActionParameter("productVariantType", productVariantType));
                    }
                    public ActionLink SearchBrands(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductVariant", "SearchBrands", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductTypes(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductVariant", "SearchProductTypes", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductVariantTypes(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductVariant", "SearchProductVariantTypes", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchPropertyDefinitions(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductVariant", "SearchPropertyDefinitions", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object productVariant, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProductVariant", "Show", options, new ActionParameter("id", productVariant));
                    }
                }
                #endregion

                #region Erp.Property
                public static readonly PropertyControllerActionContainer PropertyController = new PropertyControllerActionContainer();
                public class PropertyControllerActionContainer
                {
                    public ActionLink Show(object property, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Property", "Show", options, new ActionParameter("id", property));
                    }
                }
                #endregion

                #region Erp.PropertyDefinition
                public static readonly PropertyDefinitionControllerActionContainer PropertyDefinitionController = new PropertyDefinitionControllerActionContainer();
                public class PropertyDefinitionControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PropertyDefinition", "Default", options);
                    }
                    public ActionLink Show(object propertyDefinition, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PropertyDefinition", "Show", options, new ActionParameter("id", propertyDefinition));
                    }
                }
                #endregion

                #region Erp.PropertyDefinitionOption
                public static readonly PropertyDefinitionOptionControllerActionContainer PropertyDefinitionOptionController = new PropertyDefinitionOptionControllerActionContainer();
                public class PropertyDefinitionOptionControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PropertyDefinitionOption", "Default", options);
                    }
                    public ActionLink Show(object propertyDefinitionOption, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PropertyDefinitionOption", "Show", options, new ActionParameter("id", propertyDefinitionOption));
                    }
                }
                #endregion

                #region Erp.PropertyGroup
                public static readonly PropertyGroupControllerActionContainer PropertyGroupController = new PropertyGroupControllerActionContainer();
                public class PropertyGroupControllerActionContainer
                {
                    public ActionLink SearchAjaxExcept(System.String q, System.Collections.Generic.IReadOnlyList<int> propertyGroupIds, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PropertyGroup", "SearchAjaxExcept", options, new ActionParameter("q", q), new ActionParameter("propertyGroupIds", propertyGroupIds));
                    }
                }
                #endregion

                #region Erp.ProviderDeliveryInformation
                public static readonly ProviderDeliveryInformationControllerActionContainer ProviderDeliveryInformationController = new ProviderDeliveryInformationControllerActionContainer();
                public class ProviderDeliveryInformationControllerActionContainer
                {
                    public ActionLink BoxDetail(System.Int32 providerId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProviderDeliveryInformation", "BoxDetailAsync", options, new ActionParameter("providerId", providerId));
                    }
                }
                #endregion

                #region Erp.ProviderProduct
                public static readonly ProviderProductControllerActionContainer ProviderProductController = new ProviderProductControllerActionContainer();
                public class ProviderProductControllerActionContainer
                {
                    public ActionLink Show(System.Int32 providerSkuIdentifierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ProviderProduct", "Show", options, new ActionParameter("providerSkuIdentifierId", providerSkuIdentifierId));
                    }
                }
                #endregion

                #region Erp.PurchaseOffer
                public static readonly PurchaseOfferControllerActionContainer PurchaseOfferController = new PurchaseOfferControllerActionContainer();
                public class PurchaseOfferControllerActionContainer
                {
                    public ActionLink Show(System.Int64 purchaseOfferId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PurchaseOffer", "ShowAsync", options, new ActionParameter("purchaseOfferId", purchaseOfferId));
                    }
                }
                #endregion

                #region Erp.PurchasePaymentOption
                public static readonly PurchasePaymentOptionControllerActionContainer PurchasePaymentOptionController = new PurchasePaymentOptionControllerActionContainer();
                public class PurchasePaymentOptionControllerActionContainer
                {
                    public ActionLink List(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PurchasePaymentOption", "List", options);
                    }
                }
                #endregion

                #region Erp.PurchasingInterfaceProviderConfiguration
                public static readonly PurchasingInterfaceProviderConfigurationControllerActionContainer PurchasingInterfaceProviderConfigurationController = new PurchasingInterfaceProviderConfigurationControllerActionContainer();
                public class PurchasingInterfaceProviderConfigurationControllerActionContainer
                {
                    public ActionLink ProviderConfigurationBoxDetail(System.Int32 providerId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PurchasingInterfaceProviderConfiguration", "ProviderConfigurationBoxDetailAsync", options, new ActionParameter("providerId", providerId));
                    }
                    public ActionLink ProviderConfigurationBoxEdit(System.Int32 providerId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("PurchasingInterfaceProviderConfiguration", "ProviderConfigurationBoxEditAsync", options, new ActionParameter("providerId", providerId));
                    }
                }
                #endregion

                #region Erp.QualityMonitoring
                public static readonly QualityMonitoringControllerActionContainer QualityMonitoringController = new QualityMonitoringControllerActionContainer();
                public class QualityMonitoringControllerActionContainer
                {
                    public ActionLink SearchAjax(System.String q, System.Int32 mandatorId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("QualityMonitoring", "SearchAjax", options, new ActionParameter("q", q), new ActionParameter("mandatorId", mandatorId));
                    }
                    public ActionLink Show(object qualityMonitoring, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("QualityMonitoring", "Show", options, new ActionParameter("id", qualityMonitoring));
                    }
                }
                #endregion

                #region Erp.QualityMonitoringEscalationLevel
                public static readonly QualityMonitoringEscalationLevelControllerActionContainer QualityMonitoringEscalationLevelController = new QualityMonitoringEscalationLevelControllerActionContainer();
                public class QualityMonitoringEscalationLevelControllerActionContainer
                {
                    public ActionLink Show(object level, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("QualityMonitoringEscalationLevel", "Show", options, new ActionParameter("id", level));
                    }
                }
                #endregion

                #region Erp.RecirculateProduct
                public static readonly RecirculateProductControllerActionContainer RecirculateProductController = new RecirculateProductControllerActionContainer();
                public class RecirculateProductControllerActionContainer
                {
                    public ActionLink Recirculate(int productId, System.Int32 quantity, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RecirculateProduct", "Recirculate", options, new ActionParameter("id", productId), new ActionParameter("quantity", quantity));
                    }
                }
                #endregion

                #region Erp.RelatedMarketingPages
                public static readonly RelatedMarketingPagesControllerActionContainer RelatedMarketingPagesController = new RelatedMarketingPagesControllerActionContainer();
                public class RelatedMarketingPagesControllerActionContainer
                {
                    public ActionLink SearchRelatedMarketingPages(System.String q, int marketingPageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RelatedMarketingPages", "SearchRelatedMarketingPages", options, new ActionParameter("q", q), new ActionParameter("marketingPageId", marketingPageId));
                    }
                }
                #endregion

                #region Erp.Reminder
                public static readonly ReminderControllerActionContainer ReminderController = new ReminderControllerActionContainer();
                public class ReminderControllerActionContainer
                {
                    public ActionLink Show(object reminder, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Reminder", "Show", options, new ActionParameter("id", reminder));
                    }
                }
                #endregion

                #region Erp.RemovePropertyDefinition
                public static readonly RemovePropertyDefinitionControllerActionContainer RemovePropertyDefinitionController = new RemovePropertyDefinitionControllerActionContainer();
                public class RemovePropertyDefinitionControllerActionContainer
                {
                    public ActionLink Remove(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RemovePropertyDefinition", "RemoveAsync", options);
                    }
                    public ActionLink Show(System.Int32 propertyDefinitionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RemovePropertyDefinition", "ShowAsync", options, new ActionParameter("propertyDefinitionId", propertyDefinitionId));
                    }
                }
                #endregion

                #region Erp.RemovePropertyDefinitionOption
                public static readonly RemovePropertyDefinitionOptionControllerActionContainer RemovePropertyDefinitionOptionController = new RemovePropertyDefinitionOptionControllerActionContainer();
                public class RemovePropertyDefinitionOptionControllerActionContainer
                {
                    public ActionLink Show(System.Int32 propertyDefinitionOptionId, System.Int32? maximumPropertyValueReferences, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RemovePropertyDefinitionOption", "ShowAsync", options, new ActionParameter("propertyDefinitionOptionId", propertyDefinitionOptionId), new ActionParameter("maximumPropertyValueReferences", maximumPropertyValueReferences));
                    }
                }
                #endregion

                #region Erp.RetailPickingTour
                public static readonly RetailPickingTourControllerActionContainer RetailPickingTourController = new RetailPickingTourControllerActionContainer();
                public class RetailPickingTourControllerActionContainer
                {
                    public ActionLink Show(object retailPickingTour, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RetailPickingTour", "Show", options, new ActionParameter("id", retailPickingTour));
                    }
                }
                #endregion

                #region Erp.RetailSalesPriceDetail
                public static readonly RetailSalesPriceDetailControllerActionContainer RetailSalesPriceDetailController = new RetailSalesPriceDetailControllerActionContainer();
                public class RetailSalesPriceDetailControllerActionContainer
                {
                    public ActionLink ShowRetailSalesPriceDetails(System.Int32? salesOfferId, System.Int32? customerGroupId, System.Int32 productId, object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RetailSalesPriceDetail", "ShowRetailSalesPriceDetailsAsync", options, new ActionParameter("salesOfferId", salesOfferId), new ActionParameter("customerGroupId", customerGroupId), new ActionParameter("productId", productId), new ActionParameter("country", country));
                    }
                }
                #endregion

                #region Erp.ReturnOrderSupplier
                public static readonly ReturnOrderSupplierControllerActionContainer ReturnOrderSupplierController = new ReturnOrderSupplierControllerActionContainer();
                public class ReturnOrderSupplierControllerActionContainer
                {
                    public ActionLink AddItemAccounting(int orderId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ReturnOrderSupplier", "AddItemAccountingAsync", options, new ActionParameter("orderId", orderId));
                    }
                }
                #endregion

                #region Erp.RmaCreation
                public static readonly RmaCreationControllerActionContainer RmaCreationController = new RmaCreationControllerActionContainer();
                public class RmaCreationControllerActionContainer
                {
                    public ActionLink ReviewRmaCreationFromHandlingUnit(object handlingUnit, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RmaCreation", "ReviewRmaCreationFromHandlingUnit", options, new ActionParameter("id", handlingUnit));
                    }
                }
                #endregion

                #region Erp.RmaLocationAssigning
                public static readonly RmaLocationAssigningControllerActionContainer RmaLocationAssigningController = new RmaLocationAssigningControllerActionContainer();
                public class RmaLocationAssigningControllerActionContainer
                {
                    public ActionLink StartLocationAssigning(int itemProductStaticRmaId, System.Boolean isAdoptToCustomerReplacement = false, System.Boolean isForRefurbishing = false, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RmaLocationAssigning", "StartLocationAssigning", options, new ActionParameter("id", itemProductStaticRmaId), new ActionParameter("isAdoptToCustomerReplacement", isAdoptToCustomerReplacement), new ActionParameter("isForRefurbishing", isForRefurbishing));
                    }
                }
                #endregion

                #region Erp.RmaReplacement
                public static readonly RmaReplacementControllerActionContainer RmaReplacementController = new RmaReplacementControllerActionContainer();
                public class RmaReplacementControllerActionContainer
                {
                    public ActionLink StartServiceCenterReplacement(object ipsrma, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RmaReplacement", "StartServiceCenterReplacement", options, new ActionParameter("id", ipsrma));
                    }
                }
                #endregion

                #region Erp.RmaReplacementDirectDelivery
                public static readonly RmaReplacementDirectDeliveryControllerActionContainer RmaReplacementDirectDeliveryController = new RmaReplacementDirectDeliveryControllerActionContainer();
                public class RmaReplacementDirectDeliveryControllerActionContainer
                {
                    public ActionLink StartDirectDeliveryReplacement(object ipsrma, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RmaReplacementDirectDelivery", "StartDirectDeliveryReplacement", options, new ActionParameter("id", ipsrma));
                    }
                }
                #endregion

                #region Erp.RmaServiceCenterPickupGroup
                public static readonly RmaServiceCenterPickupGroupControllerActionContainer RmaServiceCenterPickupGroupController = new RmaServiceCenterPickupGroupControllerActionContainer();
                public class RmaServiceCenterPickupGroupControllerActionContainer
                {
                    public ActionLink CreateRmaServiceCenterPickupGroup(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RmaServiceCenterPickupGroup", "CreateRmaServiceCenterPickupGroup", options);
                    }
                    public ActionLink Show(int rmaServiceCenterPickupGroupId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RmaServiceCenterPickupGroup", "Show", options, new ActionParameter("id", rmaServiceCenterPickupGroupId));
                    }
                }
                #endregion

                #region Erp.RmaStoringTour
                public static readonly RmaStoringTourControllerActionContainer RmaStoringTourController = new RmaStoringTourControllerActionContainer();
                public class RmaStoringTourControllerActionContainer
                {
                    public ActionLink Show(object rmaStoringTour, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("RmaStoringTour", "Show", options, new ActionParameter("id", rmaStoringTour));
                    }
                }
                #endregion

                #region Erp.Role
                public static readonly RoleControllerActionContainer RoleController = new RoleControllerActionContainer();
                public class RoleControllerActionContainer
                {
                    public ActionLink IncrementalSearch(System.String q, System.String companyIdsAsStringCommaSeparated, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Role", "IncrementalSearch", options, new ActionParameter("q", q), new ActionParameter("companyIdsAsStringCommaSeparated", companyIdsAsStringCommaSeparated));
                    }
                    public ActionLink SearchAjax(System.String q, System.Int32 companyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Role", "SearchAjax", options, new ActionParameter("q", q), new ActionParameter("companyId", companyId));
                    }
                }
                #endregion

                #region Erp.SalesOffer
                public static readonly SalesOfferControllerActionContainer SalesOfferController = new SalesOfferControllerActionContainer();
                public class SalesOfferControllerActionContainer
                {
                    public ActionLink SearchDeliveryAddress(System.String q, System.Int32 customerId, System.Int32 deliveryOptionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesOffer", "SearchDeliveryAddressAsync", options, new ActionParameter("q", q), new ActionParameter("customerId", customerId), new ActionParameter("deliveryOptionId", deliveryOptionId));
                    }
                    public ActionLink SearchInvoiceAddress(System.String q, System.Int32 customerId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesOffer", "SearchInvoiceAddressAsync", options, new ActionParameter("q", q), new ActionParameter("customerId", customerId));
                    }
                    public ActionLink SetState(object salesOffer, object salesOfferState, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesOffer", "SetState", options, new ActionParameter("id", salesOffer), new ActionParameter("salesOfferState", salesOfferState));
                    }
                    public ActionLink Show(object salesOffer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesOffer", "Show", options, new ActionParameter("id", salesOffer));
                    }
                }
                #endregion

                #region Erp.SalesOrderCancellationRequest
                public static readonly SalesOrderCancellationRequestControllerActionContainer SalesOrderCancellationRequestController = new SalesOrderCancellationRequestControllerActionContainer();
                public class SalesOrderCancellationRequestControllerActionContainer
                {
                    public ActionLink List(System.Int32 orderPositionId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesOrderCancellationRequest", "List", options, new ActionParameter("orderPositionId", orderPositionId));
                    }
                }
                #endregion

                #region Erp.SalesOrderFraudClassification
                public static readonly SalesOrderFraudClassificationControllerActionContainer SalesOrderFraudClassificationController = new SalesOrderFraudClassificationControllerActionContainer();
                public class SalesOrderFraudClassificationControllerActionContainer
                {
                    public ActionLink Order(object order, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesOrderFraudClassification", "OrderAsync", options, new ActionParameter("id", order));
                    }
                    public ActionLink SetFraudClassification(object order, System.Int32 salesOrderFraudClassificationState, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesOrderFraudClassification", "SetFraudClassificationAsync", options, new ActionParameter("id", order), new ActionParameter("salesOrderFraudClassificationState", salesOrderFraudClassificationState));
                    }
                }
                #endregion

                #region Erp.SalesPaymentOption
                public static readonly SalesPaymentOptionControllerActionContainer SalesPaymentOptionController = new SalesPaymentOptionControllerActionContainer();
                public class SalesPaymentOptionControllerActionContainer
                {
                    public ActionLink List(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesPaymentOption", "List", options);
                    }
                }
                #endregion

                #region Erp.SalesPurchaseOffer
                public static readonly SalesPurchaseOfferControllerActionContainer SalesPurchaseOfferController = new SalesPurchaseOfferControllerActionContainer();
                public class SalesPurchaseOfferControllerActionContainer
                {
                    public ActionLink ShowRankedPurchaseOffers(System.Int32 productId, System.Int32 mandatorId, System.Int32 countryId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SalesPurchaseOffer", "ShowRankedPurchaseOffers", options, new ActionParameter("productId", productId), new ActionParameter("mandatorId", mandatorId), new ActionParameter("countryId", countryId));
                    }
                }
                #endregion

                #region Erp.Sample
                public static readonly SampleControllerActionContainer SampleController = new SampleControllerActionContainer();
                public class SampleControllerActionContainer
                {
                    public ActionLink SearchProductTypes(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Sample", "SearchProductTypes", options, new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.SavedState
                public static readonly SavedStateControllerActionContainer SavedStateController = new SavedStateControllerActionContainer();
                public class SavedStateControllerActionContainer
                {
                    public ActionLink Widget(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SavedState", "Widget", options);
                    }
                }
                #endregion

                #region Erp.ScrapingProductUrl
                public static readonly ScrapingProductUrlControllerActionContainer ScrapingProductUrlController = new ScrapingProductUrlControllerActionContainer();
                public class ScrapingProductUrlControllerActionContainer
                {
                    public ActionLink Show(System.Int64 productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ScrapingProductUrl", "ShowAsync", options, new ActionParameter("productId", productId));
                    }
                }
                #endregion

                #region Erp.Search
                public static readonly SearchControllerActionContainer SearchController = new SearchControllerActionContainer();
                public class SearchControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Search", "DefaultAsync", options);
                    }
                }
                #endregion

                #region Erp.ServiceCaseRegistration
                public static readonly ServiceCaseRegistrationControllerActionContainer ServiceCaseRegistrationController = new ServiceCaseRegistrationControllerActionContainer();
                public class ServiceCaseRegistrationControllerActionContainer
                {
                    public ActionLink FromCustomerService(int salesItemId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceCaseRegistration", "FromCustomerServiceAsync", options, new ActionParameter("salesItemId", salesItemId));
                    }
                    public ActionLink FromRetail(int salesItemId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceCaseRegistration", "FromRetailAsync", options, new ActionParameter("salesItemId", salesItemId));
                    }
                }
                #endregion

                #region Erp.ServiceCenter
                public static readonly ServiceCenterControllerActionContainer ServiceCenterController = new ServiceCenterControllerActionContainer();
                public class ServiceCenterControllerActionContainer
                {
                    public ActionLink GetServiceCenterNamesJson(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceCenter", "GetServiceCenterNamesJson", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(object serviceCenter, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceCenter", "Show", options, new ActionParameter("id", serviceCenter));
                    }
                    public ActionLink ShowForId(System.Int32 serviceCenterId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceCenter", "ShowForId", options, new ActionParameter("serviceCenterId", serviceCenterId));
                    }
                }
                #endregion

                #region Erp.ServiceCenterFile
                public static readonly ServiceCenterFileControllerActionContainer ServiceCenterFileController = new ServiceCenterFileControllerActionContainer();
                public class ServiceCenterFileControllerActionContainer
                {
                    public ActionLink ServiceCenterFile(object serviceCenterFile, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceCenterFile", "ServiceCenterFileAsync", options, new ActionParameter("id", serviceCenterFile));
                    }
                }
                #endregion

                #region Erp.ServiceProvider2Region
                public static readonly ServiceProvider2RegionControllerActionContainer ServiceProvider2RegionController = new ServiceProvider2RegionControllerActionContainer();
                public class ServiceProvider2RegionControllerActionContainer
                {
                    public ActionLink SearchKantons(System.String? searchTerm = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceProvider2Region", "SearchKantons", options, new ActionParameter("searchTerm", searchTerm));
                    }
                    public ActionLink SearchRegions(System.String? searchTerm = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceProvider2Region", "SearchRegions", options, new ActionParameter("searchTerm", searchTerm));
                    }
                }
                #endregion

                #region Erp.ServiceProvider
                public static readonly ServiceProviderControllerActionContainer ServiceProviderController = new ServiceProviderControllerActionContainer();
                public class ServiceProviderControllerActionContainer
                {
                    public ActionLink GetServiceProviderNames(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceProvider", "GetServiceProviderNames", options, new ActionParameter("q", q));
                    }
                    public ActionLink ShowForId(System.Int32 serviceProviderId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ServiceProvider", "ShowForId", options, new ActionParameter("serviceProviderId", serviceProviderId));
                    }
                }
                #endregion

                #region Erp.Session
                public static readonly SessionControllerActionContainer SessionController = new SessionControllerActionContainer();
                public class SessionControllerActionContainer
                {
                    public ActionLink Customer(System.Int32 id, System.Byte? numberOfDays = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Session", "Customer", options, new ActionParameter("id", id), new ActionParameter("numberOfDays", numberOfDays));
                    }
                    public ActionLink Person(System.Int32 id, System.Byte? numberOfDays = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Session", "Person", options, new ActionParameter("id", id), new ActionParameter("numberOfDays", numberOfDays));
                    }
                    public ActionLink Show(System.String id, System.DateTime? startDate, System.DateTime? endDate, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Session", "Show", options, new ActionParameter("id", id), new ActionParameter("startDate", startDate), new ActionParameter("endDate", endDate));
                    }
                }
                #endregion

                #region Erp.ShippingProvider
                public static readonly ShippingProviderControllerActionContainer ShippingProviderController = new ShippingProviderControllerActionContainer();
                public class ShippingProviderControllerActionContainer
                {
                    public ActionLink GetSortedShippingProviderNames(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("ShippingProvider", "GetSortedShippingProviderNamesAsync", options, new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.Site
                public static readonly SiteControllerActionContainer SiteController = new SiteControllerActionContainer();
                public class SiteControllerActionContainer
                {
                    public ActionLink Show(object site, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Site", "Show", options, new ActionParameter("id", site));
                    }
                    public ActionLink TableDetail(object site, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Site", "TableDetail", options, new ActionParameter("id", site));
                    }
                }
                #endregion

                #region Erp.SixPaymentTerminal
                public static readonly SixPaymentTerminalControllerActionContainer SixPaymentTerminalController = new SixPaymentTerminalControllerActionContainer();
                public class SixPaymentTerminalControllerActionContainer
                {
                    public ActionLink Show(object sixPaymentTerminal, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SixPaymentTerminal", "Show", options, new ActionParameter("id", sixPaymentTerminal));
                    }
                }
                #endregion

                #region Erp.SlaThroughputTime
                public static readonly SlaThroughputTimeControllerActionContainer SlaThroughputTimeController = new SlaThroughputTimeControllerActionContainer();
                public class SlaThroughputTimeControllerActionContainer
                {
                    public ActionLink SearchBrands(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SlaThroughputTime", "SearchBrands", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchProductTypes(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SlaThroughputTime", "SearchProductTypes", options, new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.StatusReport
                public static readonly StatusReportControllerActionContainer StatusReportController = new StatusReportControllerActionContainer();
                public class StatusReportControllerActionContainer
                {
                    public ActionLink ForBankPayment(int bankPaymentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("StatusReport", "ForBankPayment", options, new ActionParameter("bankPaymentId", bankPaymentId));
                    }
                }
                #endregion

                #region Erp.StockPicker
                public static readonly StockPickerControllerActionContainer StockPickerController = new StockPickerControllerActionContainer();
                public class StockPickerControllerActionContainer
                {
                    public ActionLink Show(object stockPicker, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("StockPicker", "Show", options, new ActionParameter("id", stockPicker));
                    }
                }
                #endregion

                #region Erp.StoringTour
                public static readonly StoringTourControllerActionContainer StoringTourController = new StoringTourControllerActionContainer();
                public class StoringTourControllerActionContainer
                {
                    public ActionLink Show(object storingTour, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("StoringTour", "Show", options, new ActionParameter("id", storingTour));
                    }
                }
                #endregion

                #region Erp.SuggestedRetailPriceImportConfiguration
                public static readonly SuggestedRetailPriceImportConfigurationControllerActionContainer SuggestedRetailPriceImportConfigurationController = new SuggestedRetailPriceImportConfigurationControllerActionContainer();
                public class SuggestedRetailPriceImportConfigurationControllerActionContainer
                {
                    public ActionLink BoxDetail(System.Int32 supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SuggestedRetailPriceImportConfiguration", "BoxDetail", options, new ActionParameter("supplierId", supplierId));
                    }
                    public ActionLink BoxEdit(System.Int32 supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SuggestedRetailPriceImportConfiguration", "BoxEdit", options, new ActionParameter("supplierId", supplierId));
                    }
                }
                #endregion

                #region Erp.SupersonicPicking
                public static readonly SupersonicPickingControllerActionContainer SupersonicPickingController = new SupersonicPickingControllerActionContainer();
                public class SupersonicPickingControllerActionContainer
                {
                    public ActionLink StartPicking(int warehouseCompartmentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupersonicPicking", "StartPickingAsync", options, new ActionParameter("id", warehouseCompartmentId));
                    }
                }
                #endregion

                #region Erp.Supplier
                public static readonly SupplierControllerActionContainer SupplierController = new SupplierControllerActionContainer();
                public class SupplierControllerActionContainer
                {
                    public ActionLink CrossMandatorSearchWithSelect2(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Supplier", "CrossMandatorSearchWithSelect2", options, new ActionParameter("q", q));
                    }
                    public ActionLink Search(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Supplier", "Search", options, new ActionParameter("q", q));
                    }
                    public ActionLink SearchByMandator(System.String q, System.Int32? mandatorId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Supplier", "SearchByMandator", options, new ActionParameter("q", q), new ActionParameter("mandatorId", mandatorId));
                    }
                    public ActionLink SearchByMandatorWithSelect2(System.String q, System.Int32? mandatorId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Supplier", "SearchByMandatorWithSelect2", options, new ActionParameter("q", q), new ActionParameter("mandatorId", mandatorId));
                    }
                    public ActionLink SearchWithSelect2(System.String? q = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Supplier", "SearchWithSelect2", options, new ActionParameter("q", q));
                    }
                }
                #endregion

                #region Erp.SupplierOrderDataProductGroup
                public static readonly SupplierOrderDataProductGroupControllerActionContainer SupplierOrderDataProductGroupController = new SupplierOrderDataProductGroupControllerActionContainer();
                public class SupplierOrderDataProductGroupControllerActionContainer
                {
                    public ActionLink BoxDetail(object group, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierOrderDataProductGroup", "BoxDetail", options, new ActionParameter("id", group));
                    }
                }
                #endregion

                #region Erp.SupplierPartnerConstellation
                public static readonly SupplierPartnerConstellationControllerActionContainer SupplierPartnerConstellationController = new SupplierPartnerConstellationControllerActionContainer();
                public class SupplierPartnerConstellationControllerActionContainer
                {
                    public ActionLink List(System.Int32 supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierPartnerConstellation", "ListAsync", options, new ActionParameter("supplierId", supplierId));
                    }
                }
                #endregion

                #region Erp.SupplierPriceCorrection
                public static readonly SupplierPriceCorrectionControllerActionContainer SupplierPriceCorrectionController = new SupplierPriceCorrectionControllerActionContainer();
                public class SupplierPriceCorrectionControllerActionContainer
                {
                    public ActionLink Show(object supplierPriceCorrection, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierPriceCorrection", "Show", options, new ActionParameter("id", supplierPriceCorrection));
                    }
                }
                #endregion

                #region Erp.SupplierProductData
                public static readonly SupplierProductDataControllerActionContainer SupplierProductDataController = new SupplierProductDataControllerActionContainer();
                public class SupplierProductDataControllerActionContainer
                {
                    public ActionLink AdvancedSearch(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierProductData", "AdvancedSearch", options);
                    }
                    public ActionLink BoxDetail(object supplierProductData, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierProductData", "BoxDetail", options, new ActionParameter("id", supplierProductData));
                    }
                    public ActionLink Show(object supplierProductData, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierProductData", "Show", options, new ActionParameter("id", supplierProductData));
                    }
                }
                #endregion

                #region Erp.SupplierProductDataManualPriceCheck
                public static readonly SupplierProductDataManualPriceCheckControllerActionContainer SupplierProductDataManualPriceCheckController = new SupplierProductDataManualPriceCheckControllerActionContainer();
                public class SupplierProductDataManualPriceCheckControllerActionContainer
                {
                    public ActionLink Process(object employee, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierProductDataManualPriceCheck", "Process", options, new ActionParameter("id", employee));
                    }
                }
                #endregion

                #region Erp.SupplierProductLogisticsInformation
                public static readonly SupplierProductLogisticsInformationControllerActionContainer SupplierProductLogisticsInformationController = new SupplierProductLogisticsInformationControllerActionContainer();
                public class SupplierProductLogisticsInformationControllerActionContainer
                {
                    public ActionLink FromProductTableDetail(object supplierProductLogisticsInformation, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierProductLogisticsInformation", "FromProductTableDetail", options, new ActionParameter("id", supplierProductLogisticsInformation));
                    }
                }
                #endregion

                #region Erp.SupplierPurchaseOrder
                public static readonly SupplierPurchaseOrderControllerActionContainer SupplierPurchaseOrderController = new SupplierPurchaseOrderControllerActionContainer();
                public class SupplierPurchaseOrderControllerActionContainer
                {
                    public ActionLink Default(System.String id, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierPurchaseOrder", "Default", options, new ActionParameter("id", id));
                    }
                }
                #endregion

                #region Erp.SupplierResponsibility
                public static readonly SupplierResponsibilityControllerActionContainer SupplierResponsibilityController = new SupplierResponsibilityControllerActionContainer();
                public class SupplierResponsibilityControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierResponsibility", "Default", options);
                    }
                }
                #endregion

                #region Erp.SupplierSpecificPurchaseConfiguration
                public static readonly SupplierSpecificPurchaseConfigurationControllerActionContainer SupplierSpecificPurchaseConfigurationController = new SupplierSpecificPurchaseConfigurationControllerActionContainer();
                public class SupplierSpecificPurchaseConfigurationControllerActionContainer
                {
                    public ActionLink SupplierSpecificGeneralConfigurationBoxDetail(System.Int32 supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierSpecificPurchaseConfiguration", "SupplierSpecificGeneralConfigurationBoxDetail", options, new ActionParameter("supplierId", supplierId));
                    }
                    public ActionLink SupplierSpecificPriceConfigurationBoxDetail(System.Int32 supplierId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SupplierSpecificPurchaseConfiguration", "SupplierSpecificPriceConfigurationBoxDetail", options, new ActionParameter("supplierId", supplierId));
                    }
                }
                #endregion

                #region Erp.SwiftMessageTransaction
                public static readonly SwiftMessageTransactionControllerActionContainer SwiftMessageTransactionController = new SwiftMessageTransactionControllerActionContainer();
                public class SwiftMessageTransactionControllerActionContainer
                {
                    public ActionLink Show(object swiftMessageTransaction, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SwiftMessageTransaction", "Show", options, new ActionParameter("id", swiftMessageTransaction));
                    }
                }
                #endregion

                #region Erp.SwissCustomsDocument
                public static readonly SwissCustomsDocumentControllerActionContainer SwissCustomsDocumentController = new SwissCustomsDocumentControllerActionContainer();
                public class SwissCustomsDocumentControllerActionContainer
                {
                    public ActionLink SwissCustomsExportDocument(object swissCustomsDocument, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SwissCustomsDocument", "SwissCustomsExportDocumentAsync", options, new ActionParameter("id", swissCustomsDocument));
                    }
                }
                #endregion

                #region Erp.SwissVatExemption
                public static readonly SwissVatExemptionControllerActionContainer SwissVatExemptionController = new SwissVatExemptionControllerActionContainer();
                public class SwissVatExemptionControllerActionContainer
                {
                    public ActionLink SwissVatExemptionFile(object swissVatExemption, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SwissVatExemption", "SwissVatExemptionFileAsync", options, new ActionParameter("id", swissVatExemption));
                    }
                }
                #endregion

                #region Erp.SystemContent
                public static readonly SystemContentControllerActionContainer SystemContentController = new SystemContentControllerActionContainer();
                public class SystemContentControllerActionContainer
                {
                    public ActionLink ExecuteTranslationMode(System.Int32 lastId, System.Int32 filterLanguageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SystemContent", "ExecuteTranslationMode", options, new ActionParameter("lastId", lastId), new ActionParameter("filterLanguageId", filterLanguageId));
                    }
                    public ActionLink TranslationModeEdit(object systemContent, System.String filterLanguageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SystemContent", "TranslationModeEdit", options, new ActionParameter("id", systemContent), new ActionParameter("filterLanguageId", filterLanguageId));
                    }
                }
                #endregion

                #region Erp.SystemTask
                public static readonly SystemTaskControllerActionContainer SystemTaskController = new SystemTaskControllerActionContainer();
                public class SystemTaskControllerActionContainer
                {
                    public ActionLink Show(int id, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SystemTask", "Show", options, new ActionParameter("id", id));
                    }
                }
                #endregion

                #region Erp.SystemTaskExecution
                public static readonly SystemTaskExecutionControllerActionContainer SystemTaskExecutionController = new SystemTaskExecutionControllerActionContainer();
                public class SystemTaskExecutionControllerActionContainer
                {
                    public ActionLink Show(object systemTaskExecution, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("SystemTaskExecution", "Show", options, new ActionParameter("id", systemTaskExecution));
                    }
                }
                #endregion

                #region Erp.Tag
                public static readonly TagControllerActionContainer TagController = new TagControllerActionContainer();
                public class TagControllerActionContainer
                {
                    public ActionLink Search(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Tag", "Search", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(System.Int32 tagId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Tag", "ShowAsync", options, new ActionParameter("tagId", tagId));
                    }
                }
                #endregion

                #region Erp.TargetAgreement
                public static readonly TargetAgreementControllerActionContainer TargetAgreementController = new TargetAgreementControllerActionContainer();
                public class TargetAgreementControllerActionContainer
                {
                    public ActionLink Show(int targetAgreementId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TargetAgreement", "Show", options, new ActionParameter("id", targetAgreementId));
                    }
                }
                #endregion

                #region Erp.TestData
                public static readonly TestDataControllerActionContainer TestDataController = new TestDataControllerActionContainer();
                public class TestDataControllerActionContainer
                {
                    public ActionLink ConfigureDataFactory(System.String factoryFullName, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TestData", "ConfigureDataFactory", options, new ActionParameter("factoryFullName", factoryFullName));
                    }
                }
                #endregion

                #region Erp.TimeClockPunch
                public static readonly TimeClockPunchControllerActionContainer TimeClockPunchController = new TimeClockPunchControllerActionContainer();
                public class TimeClockPunchControllerActionContainer
                {
                    public ActionLink Widget(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TimeClockPunch", "Widget", options);
                    }
                }
                #endregion

                #region Erp.TransportBin
                public static readonly TransportBinControllerActionContainer TransportBinController = new TransportBinControllerActionContainer();
                public class TransportBinControllerActionContainer
                {
                    public ActionLink FromBookInTransportBinSectionsBoxDetail(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TransportBin", "FromBookInTransportBinSectionsBoxDetail", options);
                    }
                    public ActionLink Show(int transportBinId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TransportBin", "Show", options, new ActionParameter("id", transportBinId));
                    }
                }
                #endregion

                #region Erp.TransportBinHandover
                public static readonly TransportBinHandoverControllerActionContainer TransportBinHandoverController = new TransportBinHandoverControllerActionContainer();
                public class TransportBinHandoverControllerActionContainer
                {
                    public ActionLink Show(int transportBinId, System.String? redirectUrl = null, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TransportBinHandover", "ShowAsync", options, new ActionParameter("id", transportBinId), new ActionParameter("redirectUrl", redirectUrl));
                    }
                }
                #endregion

                #region Erp.TransportInsuranceCase
                public static readonly TransportInsuranceCaseControllerActionContainer TransportInsuranceCaseController = new TransportInsuranceCaseControllerActionContainer();
                public class TransportInsuranceCaseControllerActionContainer
                {
                    public ActionLink Show(object transportInsuranceCase, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TransportInsuranceCase", "Show", options, new ActionParameter("id", transportInsuranceCase));
                    }
                }
                #endregion

                #region Erp.TransportInsuranceCaseFile
                public static readonly TransportInsuranceCaseFileControllerActionContainer TransportInsuranceCaseFileController = new TransportInsuranceCaseFileControllerActionContainer();
                public class TransportInsuranceCaseFileControllerActionContainer
                {
                    public ActionLink TransportInsuranceCaseFile(object transportInsuranceCaseFile, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TransportInsuranceCaseFile", "TransportInsuranceCaseFileAsync", options, new ActionParameter("id", transportInsuranceCaseFile));
                    }
                }
                #endregion

                #region Erp.TrolleyCompartment
                public static readonly TrolleyCompartmentControllerActionContainer TrolleyCompartmentController = new TrolleyCompartmentControllerActionContainer();
                public class TrolleyCompartmentControllerActionContainer
                {
                    public ActionLink Show(int trolleyCompartmentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("TrolleyCompartment", "Show", options, new ActionParameter("id", trolleyCompartmentId));
                    }
                }
                #endregion

                #region Erp.Trolley
                public static readonly TrolleyControllerActionContainer TrolleyController = new TrolleyControllerActionContainer();
                public class TrolleyControllerActionContainer
                {
                    public ActionLink AddToCentralWarehouseTransfer(int trolleyId, int originWarehouseId, int targetWarehouseId, System.Int32 transferType, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Trolley", "AddToCentralWarehouseTransfer", options, new ActionParameter("id", trolleyId), new ActionParameter("originWarehouseId", originWarehouseId), new ActionParameter("targetWarehouseId", targetWarehouseId), new ActionParameter("transferType", transferType));
                    }
                    public ActionLink SearchPersonAjax(System.String q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Trolley", "SearchPersonAjax", options, new ActionParameter("q", q));
                    }
                    public ActionLink Show(int trolleyId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Trolley", "Show", options, new ActionParameter("id", trolleyId));
                    }
                }
                #endregion

                #region Erp.Upselling
                public static readonly UpsellingControllerActionContainer UpsellingController = new UpsellingControllerActionContainer();
                public class UpsellingControllerActionContainer
                {
                    public ActionLink AddToUserSelection(int mainProductId, int accessoryProductId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Upselling", "AddToUserSelectionAsync", options, new ActionParameter("id", mainProductId), new ActionParameter("accessoryProductId", accessoryProductId));
                    }
                }
                #endregion

                #region Erp.User
                public static readonly UserControllerActionContainer UserController = new UserControllerActionContainer();
                public class UserControllerActionContainer
                {
                    public ActionLink ChangeBuilding(object warehouseBuilding, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("User", "ChangeBuilding", options, new ActionParameter("id", warehouseBuilding));
                    }
                    public ActionLink ChangeCountry(object country, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("User", "ChangeCountry", options, new ActionParameter("id", country));
                    }
                    public ActionLink ChangeSite(object site, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("User", "ChangeSite", options, new ActionParameter("id", site));
                    }
                    public ActionLink Detail(object user, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("User", "Detail", options, new ActionParameter("id", user));
                    }
                }
                #endregion

                #region Erp.UserNotification
                public static readonly UserNotificationControllerActionContainer UserNotificationController = new UserNotificationControllerActionContainer();
                public class UserNotificationControllerActionContainer
                {
                    public ActionLink Show(object userNotification, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("UserNotification", "Show", options, new ActionParameter("id", userNotification));
                    }
                    public ActionLink Widget(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("UserNotification", "Widget", options);
                    }
                }
                #endregion

                #region Erp.UserSelection
                public static readonly UserSelectionControllerActionContainer UserSelectionController = new UserSelectionControllerActionContainer();
                public class UserSelectionControllerActionContainer
                {
                    public ActionLink Widget(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("UserSelection", "WidgetAsync", options);
                    }
                }
                #endregion

                #region Erp.VolumeDiscount
                public static readonly VolumeDiscountControllerActionContainer VolumeDiscountController = new VolumeDiscountControllerActionContainer();
                public class VolumeDiscountControllerActionContainer
                {
                    public ActionLink VolumeDiscounts(System.Int64? retailSalesOfferId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("VolumeDiscount", "VolumeDiscountsAsync", options, new ActionParameter("retailSalesOfferId", retailSalesOfferId));
                    }
                }
                #endregion

                #region Erp.WarehouseBox
                public static readonly WarehouseBoxControllerActionContainer WarehouseBoxController = new WarehouseBoxControllerActionContainer();
                public class WarehouseBoxControllerActionContainer
                {
                    public ActionLink Show(int warehouseBoxId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseBox", "Show", options, new ActionParameter("id", warehouseBoxId));
                    }
                }
                #endregion

                #region Erp.WarehouseCompartment
                public static readonly WarehouseCompartmentControllerActionContainer WarehouseCompartmentController = new WarehouseCompartmentControllerActionContainer();
                public class WarehouseCompartmentControllerActionContainer
                {
                    public ActionLink Show(int warehouseCompartmentId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseCompartment", "Show", options, new ActionParameter("id", warehouseCompartmentId));
                    }
                }
                #endregion

                #region Erp.WarehouseCompartmentLockedType
                public static readonly WarehouseCompartmentLockedTypeControllerActionContainer WarehouseCompartmentLockedTypeController = new WarehouseCompartmentLockedTypeControllerActionContainer();
                public class WarehouseCompartmentLockedTypeControllerActionContainer
                {
                    public ActionLink List(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseCompartmentLockedType", "List", options);
                    }
                }
                #endregion

                #region Erp.Warehouse
                public static readonly WarehouseControllerActionContainer WarehouseController = new WarehouseControllerActionContainer();
                public class WarehouseControllerActionContainer
                {
                    public ActionLink Show(int warehouseId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Warehouse", "Show", options, new ActionParameter("id", warehouseId));
                    }
                }
                #endregion

                #region Erp.WarehouseStorageCapability
                public static readonly WarehouseStorageCapabilityControllerActionContainer WarehouseStorageCapabilityController = new WarehouseStorageCapabilityControllerActionContainer();
                public class WarehouseStorageCapabilityControllerActionContainer
                {
                    public ActionLink Logistics(int productTypeId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseStorageCapability", "LogisticsAsync", options, new ActionParameter("id", productTypeId));
                    }
                    public ActionLink ProductLogistics(int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseStorageCapability", "ProductLogisticsAsync", options, new ActionParameter("id", productId));
                    }
                }
                #endregion

                #region Erp.WarehouseTransfer
                public static readonly WarehouseTransferControllerActionContainer WarehouseTransferController = new WarehouseTransferControllerActionContainer();
                public class WarehouseTransferControllerActionContainer
                {
                    public ActionLink Show(object warehouseTransfer, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseTransfer", "ShowAsync", options, new ActionParameter("id", warehouseTransfer));
                    }
                }
                #endregion

                #region Erp.WarehouseTransferItemProduct
                public static readonly WarehouseTransferItemProductControllerActionContainer WarehouseTransferItemProductController = new WarehouseTransferItemProductControllerActionContainer();
                public class WarehouseTransferItemProductControllerActionContainer
                {
                    public ActionLink Show(object warehouseTransferItemProduct, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseTransferItemProduct", "Show", options, new ActionParameter("id", warehouseTransferItemProduct));
                    }
                }
                #endregion

                #region Erp.WarehouseTransferTour
                public static readonly WarehouseTransferTourControllerActionContainer WarehouseTransferTourController = new WarehouseTransferTourControllerActionContainer();
                public class WarehouseTransferTourControllerActionContainer
                {
                    public ActionLink Show(object warehouseTransferTour, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WarehouseTransferTour", "Show", options, new ActionParameter("id", warehouseTransferTour));
                    }
                }
                #endregion

                #region Erp.Welcome
                public static readonly WelcomeControllerActionContainer WelcomeController = new WelcomeControllerActionContainer();
                public class WelcomeControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Welcome", "Default", options);
                    }
                }
                #endregion

                #region Erp.Wiki
                public static readonly WikiControllerActionContainer WikiController = new WikiControllerActionContainer();
                public class WikiControllerActionContainer
                {
                    public ActionLink ContentTranslateToLanguage(object wikiTopicContent, object language, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Wiki", "ContentTranslateToLanguageAsync", options, new ActionParameter("id", wikiTopicContent), new ActionParameter("language", language));
                    }
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Wiki", "Default", options);
                    }
                    public ActionLink Diff(object wikiTopicContent, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Wiki", "Diff", options, new ActionParameter("id", wikiTopicContent));
                    }
                    public ActionLink Search(System.String q, System.Int32 language, System.Boolean searchArchive, System.Boolean useFuzzySearch, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Wiki", "Search", options, new ActionParameter("q", q), new ActionParameter("language", language), new ActionParameter("searchArchive", searchArchive), new ActionParameter("useFuzzySearch", useFuzzySearch));
                    }
                    public ActionLink Show(object wikiTopic, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Wiki", "Show", options, new ActionParameter("id", wikiTopic));
                    }
                    public ActionLink TopicTreeMove(int sourceTopicId, int targetTopicId, System.String method, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Wiki", "TopicTreeMove", options, new ActionParameter("id", sourceTopicId), new ActionParameter("targetTopicId", targetTopicId), new ActionParameter("method", method));
                    }
                }
                #endregion

                #region Erp.WmsErrorCase
                public static readonly WmsErrorCaseControllerActionContainer WmsErrorCaseController = new WmsErrorCaseControllerActionContainer();
                public class WmsErrorCaseControllerActionContainer
                {
                    public ActionLink ArticlesFullTableDetail(int articleId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WmsErrorCase", "ArticlesFullTableDetailAsync", options, new ActionParameter("id", articleId));
                    }
                    public ActionLink OpenWmsErrorCaseSearch(int productId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WmsErrorCase", "OpenWmsErrorCaseSearchAsync", options, new ActionParameter("id", productId));
                    }
                    public ActionLink TransportBinFullTableDetail(System.String transportBinBarcode, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WmsErrorCase", "TransportBinFullTableDetailAsync", options, new ActionParameter("transportBinBarcode", transportBinBarcode));
                    }
                }
                #endregion

                #region Erp.WmsExceptionInfo
                public static readonly WmsExceptionInfoControllerActionContainer WmsExceptionInfoController = new WmsExceptionInfoControllerActionContainer();
                public class WmsExceptionInfoControllerActionContainer
                {
                    public ActionLink Default(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WmsExceptionInfo", "Default", options);
                    }
                    public ActionLink Show(System.Int64 exceptionInfoId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WmsExceptionInfo", "Show", options, new ActionParameter("exceptionInfoId", exceptionInfoId));
                    }
                }
                #endregion

                #region Erp.Word
                public static readonly WordControllerActionContainer WordController = new WordControllerActionContainer();
                public class WordControllerActionContainer
                {
                    public ActionLink TranslationServiceSuggestions(int wordId, int languageId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Word", "TranslationServiceSuggestions", options, new ActionParameter("id", wordId), new ActionParameter("languageId", languageId));
                    }
                }
                #endregion

                #region Erp.WorkingPlace
                public static readonly WorkingPlaceControllerActionContainer WorkingPlaceController = new WorkingPlaceControllerActionContainer();
                public class WorkingPlaceControllerActionContainer
                {
                    public ActionLink Show(int workingPlaceId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WorkingPlace", "Show", options, new ActionParameter("workingPlaceId", workingPlaceId));
                    }
                }
                #endregion

                #region Erp.WorkingPlaceLogin
                public static readonly WorkingPlaceLoginControllerActionContainer WorkingPlaceLoginController = new WorkingPlaceLoginControllerActionContainer();
                public class WorkingPlaceLoginControllerActionContainer
                {
                    public ActionLink GetWorkingPlaceBy(System.String? q, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WorkingPlaceLogin", "GetWorkingPlaceBy", options, new ActionParameter("q", q));
                    }
                    public ActionLink SignIn(System.String workingPlaceId, System.String workingPlaceNameOrBarcode, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WorkingPlaceLogin", "SignIn", options, new ActionParameter("workingPlaceId", workingPlaceId), new ActionParameter("workingPlaceNameOrBarcode", workingPlaceNameOrBarcode));
                    }
                    public ActionLink SignOut(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WorkingPlaceLogin", "SignOut", options);
                    }
                    public ActionLink Widget(ActionLinkOptions? options = null)
                    {
                        return new ActionLink("WorkingPlaceLogin", "Widget", options);
                    }
                }
                #endregion

                #region Erp.Zendesk
                public static readonly ZendeskControllerActionContainer ZendeskController = new ZendeskControllerActionContainer();
                public class ZendeskControllerActionContainer
                {
                    public ActionLink ConnectOverviewPage(System.Collections.Generic.IReadOnlyList<int> ids, System.Int64 zendeskUserId, ActionLinkOptions? options = null)
                    {
                        return new ActionLink("Zendesk", "ConnectOverviewPage", options, new ActionParameter("ids", ids), new ActionParameter("zendeskUserId", zendeskUserId));
                    }
                }
                #endregion

            }
        }
    }
}

namespace Chabis.HtmlHelper.Hyperlinks
    {
    public class ActionParameter
    {
        public ActionParameter(string id, object? param)
        {
            
        }
    }

    public class ActionLinkOptions
    {
        public bool EncryptParameters { get; set; }
    }
    }
#pragma warning restore 1591
#pragma warning restore CA1822